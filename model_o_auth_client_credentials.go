/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OAuthClientCredentials OAuth client credentials.
type OAuthClientCredentials struct {
	// Specify the client ID.
	ClientId string `json:"clientId"`
	ClientSecret *HiddenField `json:"clientSecret,omitempty"`
	// Specify the ID of a key pair to use for mutual TLS.
	KeyPairId *int32 `json:"keyPairId,omitempty"`
	CredentialsType *CredentialsType `json:"credentialsType,omitempty"`
}

// NewOAuthClientCredentials instantiates a new OAuthClientCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthClientCredentials(clientId string) *OAuthClientCredentials {
	this := OAuthClientCredentials{}
	this.ClientId = clientId
	return &this
}

// NewOAuthClientCredentialsWithDefaults instantiates a new OAuthClientCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthClientCredentialsWithDefaults() *OAuthClientCredentials {
	this := OAuthClientCredentials{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *OAuthClientCredentials) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *OAuthClientCredentials) GetClientIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *OAuthClientCredentials) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *OAuthClientCredentials) GetClientSecret() HiddenField {
	if o == nil || isNil(o.ClientSecret) {
		var ret HiddenField
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientCredentials) GetClientSecretOk() (*HiddenField, bool) {
	if o == nil || isNil(o.ClientSecret) {
    return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *OAuthClientCredentials) HasClientSecret() bool {
	if o != nil && !isNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given HiddenField and assigns it to the ClientSecret field.
func (o *OAuthClientCredentials) SetClientSecret(v HiddenField) {
	o.ClientSecret = &v
}

// GetKeyPairId returns the KeyPairId field value if set, zero value otherwise.
func (o *OAuthClientCredentials) GetKeyPairId() int32 {
	if o == nil || isNil(o.KeyPairId) {
		var ret int32
		return ret
	}
	return *o.KeyPairId
}

// GetKeyPairIdOk returns a tuple with the KeyPairId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientCredentials) GetKeyPairIdOk() (*int32, bool) {
	if o == nil || isNil(o.KeyPairId) {
    return nil, false
	}
	return o.KeyPairId, true
}

// HasKeyPairId returns a boolean if a field has been set.
func (o *OAuthClientCredentials) HasKeyPairId() bool {
	if o != nil && !isNil(o.KeyPairId) {
		return true
	}

	return false
}

// SetKeyPairId gets a reference to the given int32 and assigns it to the KeyPairId field.
func (o *OAuthClientCredentials) SetKeyPairId(v int32) {
	o.KeyPairId = &v
}

// GetCredentialsType returns the CredentialsType field value if set, zero value otherwise.
func (o *OAuthClientCredentials) GetCredentialsType() CredentialsType {
	if o == nil || isNil(o.CredentialsType) {
		var ret CredentialsType
		return ret
	}
	return *o.CredentialsType
}

// GetCredentialsTypeOk returns a tuple with the CredentialsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientCredentials) GetCredentialsTypeOk() (*CredentialsType, bool) {
	if o == nil || isNil(o.CredentialsType) {
    return nil, false
	}
	return o.CredentialsType, true
}

// HasCredentialsType returns a boolean if a field has been set.
func (o *OAuthClientCredentials) HasCredentialsType() bool {
	if o != nil && !isNil(o.CredentialsType) {
		return true
	}

	return false
}

// SetCredentialsType gets a reference to the given CredentialsType and assigns it to the CredentialsType field.
func (o *OAuthClientCredentials) SetCredentialsType(v CredentialsType) {
	o.CredentialsType = &v
}

func (o OAuthClientCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clientId"] = o.ClientId
	}
	if !isNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !isNil(o.KeyPairId) {
		toSerialize["keyPairId"] = o.KeyPairId
	}
	if !isNil(o.CredentialsType) {
		toSerialize["credentialsType"] = o.CredentialsType
	}
	return json.Marshal(toSerialize)
}

type NullableOAuthClientCredentials struct {
	value *OAuthClientCredentials
	isSet bool
}

func (v NullableOAuthClientCredentials) Get() *OAuthClientCredentials {
	return v.value
}

func (v *NullableOAuthClientCredentials) Set(val *OAuthClientCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthClientCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthClientCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthClientCredentials(val *OAuthClientCredentials) *NullableOAuthClientCredentials {
	return &NullableOAuthClientCredentials{value: val, isSet: true}
}

func (v NullableOAuthClientCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthClientCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


