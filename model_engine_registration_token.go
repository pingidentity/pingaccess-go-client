/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EngineRegistrationToken A JWT to be used to initialize self-registration of an engine with its administrative console.
type EngineRegistrationToken struct {
	// The ID of the proxy to use for HTTP requests or zero if none.
	HttpProxyId *int32 `json:"httpProxyId,omitempty"`
	// The ID of the proxy to use for HTTPS requests or zero if none.
	HttpsProxyId *int32 `json:"httpsProxyId,omitempty"`
	// The number of seconds after which this token will expire and be unavailable for use to register engines.
	ExpirationSeconds int32 `json:"expirationSeconds"`
	// The ID of the certificate the engine will use to contact PingAccess via SSL/TLS.
	SelectedCertificateId *int32 `json:"selectedCertificateId,omitempty"`
}

// NewEngineRegistrationToken instantiates a new EngineRegistrationToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEngineRegistrationToken(expirationSeconds int32) *EngineRegistrationToken {
	this := EngineRegistrationToken{}
	this.ExpirationSeconds = expirationSeconds
	return &this
}

// NewEngineRegistrationTokenWithDefaults instantiates a new EngineRegistrationToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEngineRegistrationTokenWithDefaults() *EngineRegistrationToken {
	this := EngineRegistrationToken{}
	return &this
}

// GetHttpProxyId returns the HttpProxyId field value if set, zero value otherwise.
func (o *EngineRegistrationToken) GetHttpProxyId() int32 {
	if o == nil || isNil(o.HttpProxyId) {
		var ret int32
		return ret
	}
	return *o.HttpProxyId
}

// GetHttpProxyIdOk returns a tuple with the HttpProxyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EngineRegistrationToken) GetHttpProxyIdOk() (*int32, bool) {
	if o == nil || isNil(o.HttpProxyId) {
    return nil, false
	}
	return o.HttpProxyId, true
}

// HasHttpProxyId returns a boolean if a field has been set.
func (o *EngineRegistrationToken) HasHttpProxyId() bool {
	if o != nil && !isNil(o.HttpProxyId) {
		return true
	}

	return false
}

// SetHttpProxyId gets a reference to the given int32 and assigns it to the HttpProxyId field.
func (o *EngineRegistrationToken) SetHttpProxyId(v int32) {
	o.HttpProxyId = &v
}

// GetHttpsProxyId returns the HttpsProxyId field value if set, zero value otherwise.
func (o *EngineRegistrationToken) GetHttpsProxyId() int32 {
	if o == nil || isNil(o.HttpsProxyId) {
		var ret int32
		return ret
	}
	return *o.HttpsProxyId
}

// GetHttpsProxyIdOk returns a tuple with the HttpsProxyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EngineRegistrationToken) GetHttpsProxyIdOk() (*int32, bool) {
	if o == nil || isNil(o.HttpsProxyId) {
    return nil, false
	}
	return o.HttpsProxyId, true
}

// HasHttpsProxyId returns a boolean if a field has been set.
func (o *EngineRegistrationToken) HasHttpsProxyId() bool {
	if o != nil && !isNil(o.HttpsProxyId) {
		return true
	}

	return false
}

// SetHttpsProxyId gets a reference to the given int32 and assigns it to the HttpsProxyId field.
func (o *EngineRegistrationToken) SetHttpsProxyId(v int32) {
	o.HttpsProxyId = &v
}

// GetExpirationSeconds returns the ExpirationSeconds field value
func (o *EngineRegistrationToken) GetExpirationSeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpirationSeconds
}

// GetExpirationSecondsOk returns a tuple with the ExpirationSeconds field value
// and a boolean to check if the value has been set.
func (o *EngineRegistrationToken) GetExpirationSecondsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ExpirationSeconds, true
}

// SetExpirationSeconds sets field value
func (o *EngineRegistrationToken) SetExpirationSeconds(v int32) {
	o.ExpirationSeconds = v
}

// GetSelectedCertificateId returns the SelectedCertificateId field value if set, zero value otherwise.
func (o *EngineRegistrationToken) GetSelectedCertificateId() int32 {
	if o == nil || isNil(o.SelectedCertificateId) {
		var ret int32
		return ret
	}
	return *o.SelectedCertificateId
}

// GetSelectedCertificateIdOk returns a tuple with the SelectedCertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EngineRegistrationToken) GetSelectedCertificateIdOk() (*int32, bool) {
	if o == nil || isNil(o.SelectedCertificateId) {
    return nil, false
	}
	return o.SelectedCertificateId, true
}

// HasSelectedCertificateId returns a boolean if a field has been set.
func (o *EngineRegistrationToken) HasSelectedCertificateId() bool {
	if o != nil && !isNil(o.SelectedCertificateId) {
		return true
	}

	return false
}

// SetSelectedCertificateId gets a reference to the given int32 and assigns it to the SelectedCertificateId field.
func (o *EngineRegistrationToken) SetSelectedCertificateId(v int32) {
	o.SelectedCertificateId = &v
}

func (o EngineRegistrationToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HttpProxyId) {
		toSerialize["httpProxyId"] = o.HttpProxyId
	}
	if !isNil(o.HttpsProxyId) {
		toSerialize["httpsProxyId"] = o.HttpsProxyId
	}
	if true {
		toSerialize["expirationSeconds"] = o.ExpirationSeconds
	}
	if !isNil(o.SelectedCertificateId) {
		toSerialize["selectedCertificateId"] = o.SelectedCertificateId
	}
	return json.Marshal(toSerialize)
}

type NullableEngineRegistrationToken struct {
	value *EngineRegistrationToken
	isSet bool
}

func (v NullableEngineRegistrationToken) Get() *EngineRegistrationToken {
	return v.value
}

func (v *NullableEngineRegistrationToken) Set(val *EngineRegistrationToken) {
	v.value = val
	v.isSet = true
}

func (v NullableEngineRegistrationToken) IsSet() bool {
	return v.isSet
}

func (v *NullableEngineRegistrationToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEngineRegistrationToken(val *EngineRegistrationToken) *NullableEngineRegistrationToken {
	return &NullableEngineRegistrationToken{value: val, isSet: true}
}

func (v NullableEngineRegistrationToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEngineRegistrationToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


