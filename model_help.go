/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Help struct for Help
type Help struct {
	Title string `json:"title"`
	Content string `json:"content"`
	Url string `json:"url"`
}

// NewHelp instantiates a new Help object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelp(title string, content string, url string) *Help {
	this := Help{}
	this.Title = title
	this.Content = content
	this.Url = url
	return &this
}

// NewHelpWithDefaults instantiates a new Help object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelpWithDefaults() *Help {
	this := Help{}
	return &this
}

// GetTitle returns the Title field value
func (o *Help) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Help) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Help) SetTitle(v string) {
	o.Title = v
}

// GetContent returns the Content field value
func (o *Help) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *Help) GetContentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *Help) SetContent(v string) {
	o.Content = v
}

// GetUrl returns the Url field value
func (o *Help) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Help) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Help) SetUrl(v string) {
	o.Url = v
}

func (o Help) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableHelp struct {
	value *Help
	isSet bool
}

func (v NullableHelp) Get() *Help {
	return v.value
}

func (v *NullableHelp) Set(val *Help) {
	v.value = val
	v.isSet = true
}

func (v NullableHelp) IsSet() bool {
	return v.isSet
}

func (v *NullableHelp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelp(val *Help) *NullableHelp {
	return &NullableHelp{value: val, isSet: true}
}

func (v NullableHelp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


