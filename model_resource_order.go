/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResourceOrder Specifies an ordering of Application Resources.
type ResourceOrder struct {
	// An ordered list of Resource IDs (integers).
	ResourceIds []int32 `json:"resourceIds,omitempty"`
}

// NewResourceOrder instantiates a new ResourceOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceOrder() *ResourceOrder {
	this := ResourceOrder{}
	return &this
}

// NewResourceOrderWithDefaults instantiates a new ResourceOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceOrderWithDefaults() *ResourceOrder {
	this := ResourceOrder{}
	return &this
}

// GetResourceIds returns the ResourceIds field value if set, zero value otherwise.
func (o *ResourceOrder) GetResourceIds() []int32 {
	if o == nil || isNil(o.ResourceIds) {
		var ret []int32
		return ret
	}
	return o.ResourceIds
}

// GetResourceIdsOk returns a tuple with the ResourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceOrder) GetResourceIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.ResourceIds) {
    return nil, false
	}
	return o.ResourceIds, true
}

// HasResourceIds returns a boolean if a field has been set.
func (o *ResourceOrder) HasResourceIds() bool {
	if o != nil && !isNil(o.ResourceIds) {
		return true
	}

	return false
}

// SetResourceIds gets a reference to the given []int32 and assigns it to the ResourceIds field.
func (o *ResourceOrder) SetResourceIds(v []int32) {
	o.ResourceIds = v
}

func (o ResourceOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ResourceIds) {
		toSerialize["resourceIds"] = o.ResourceIds
	}
	return json.Marshal(toSerialize)
}

type NullableResourceOrder struct {
	value *ResourceOrder
	isSet bool
}

func (v NullableResourceOrder) Get() *ResourceOrder {
	return v.value
}

func (v *NullableResourceOrder) Set(val *ResourceOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceOrder(val *ResourceOrder) *NullableResourceOrder {
	return &NullableResourceOrder{value: val, isSet: true}
}

func (v NullableResourceOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


