/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PolicyItem A policy item.
type PolicyItem struct {
	Type PolicyItemType `json:"type"`
	// The ID of the rule or rule set.
	Id int32 `json:"id"`
}

// NewPolicyItem instantiates a new PolicyItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyItem(type_ PolicyItemType, id int32) *PolicyItem {
	this := PolicyItem{}
	this.Type = type_
	this.Id = id
	return &this
}

// NewPolicyItemWithDefaults instantiates a new PolicyItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyItemWithDefaults() *PolicyItem {
	this := PolicyItem{}
	return &this
}

// GetType returns the Type field value
func (o *PolicyItem) GetType() PolicyItemType {
	if o == nil {
		var ret PolicyItemType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PolicyItem) GetTypeOk() (*PolicyItemType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PolicyItem) SetType(v PolicyItemType) {
	o.Type = v
}

// GetId returns the Id field value
func (o *PolicyItem) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PolicyItem) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PolicyItem) SetId(v int32) {
	o.Id = v
}

func (o PolicyItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyItem struct {
	value *PolicyItem
	isSet bool
}

func (v NullablePolicyItem) Get() *PolicyItem {
	return v.value
}

func (v *NullablePolicyItem) Set(val *PolicyItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyItem(val *PolicyItem) *NullablePolicyItem {
	return &NullablePolicyItem{value: val, isSet: true}
}

func (v NullablePolicyItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


