/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResourceMatchingEntry A resource matching entry.
type ResourceMatchingEntry struct {
	// The name of the associated resource.
	Name string `json:"name"`
	Type EntryType `json:"type"`
	Link Link `json:"link"`
	// A set of HTTP methods configured for the resource, or '*' to indicate any method.
	Methods []string `json:"methods"`
	// A path-matching pattern, relative to the Application context root (interpreted according to the pattern 'type').
	Pattern string `json:"pattern"`
	PatternType PathPatternType `json:"patternType"`
}

// NewResourceMatchingEntry instantiates a new ResourceMatchingEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceMatchingEntry(name string, type_ EntryType, link Link, methods []string, pattern string, patternType PathPatternType) *ResourceMatchingEntry {
	this := ResourceMatchingEntry{}
	this.Name = name
	this.Type = type_
	this.Link = link
	this.Methods = methods
	this.Pattern = pattern
	this.PatternType = patternType
	return &this
}

// NewResourceMatchingEntryWithDefaults instantiates a new ResourceMatchingEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceMatchingEntryWithDefaults() *ResourceMatchingEntry {
	this := ResourceMatchingEntry{}
	return &this
}

// GetName returns the Name field value
func (o *ResourceMatchingEntry) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceMatchingEntry) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceMatchingEntry) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *ResourceMatchingEntry) GetType() EntryType {
	if o == nil {
		var ret EntryType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ResourceMatchingEntry) GetTypeOk() (*EntryType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ResourceMatchingEntry) SetType(v EntryType) {
	o.Type = v
}

// GetLink returns the Link field value
func (o *ResourceMatchingEntry) GetLink() Link {
	if o == nil {
		var ret Link
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *ResourceMatchingEntry) GetLinkOk() (*Link, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *ResourceMatchingEntry) SetLink(v Link) {
	o.Link = v
}

// GetMethods returns the Methods field value
func (o *ResourceMatchingEntry) GetMethods() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Methods
}

// GetMethodsOk returns a tuple with the Methods field value
// and a boolean to check if the value has been set.
func (o *ResourceMatchingEntry) GetMethodsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Methods, true
}

// SetMethods sets field value
func (o *ResourceMatchingEntry) SetMethods(v []string) {
	o.Methods = v
}

// GetPattern returns the Pattern field value
func (o *ResourceMatchingEntry) GetPattern() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value
// and a boolean to check if the value has been set.
func (o *ResourceMatchingEntry) GetPatternOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Pattern, true
}

// SetPattern sets field value
func (o *ResourceMatchingEntry) SetPattern(v string) {
	o.Pattern = v
}

// GetPatternType returns the PatternType field value
func (o *ResourceMatchingEntry) GetPatternType() PathPatternType {
	if o == nil {
		var ret PathPatternType
		return ret
	}

	return o.PatternType
}

// GetPatternTypeOk returns a tuple with the PatternType field value
// and a boolean to check if the value has been set.
func (o *ResourceMatchingEntry) GetPatternTypeOk() (*PathPatternType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PatternType, true
}

// SetPatternType sets field value
func (o *ResourceMatchingEntry) SetPatternType(v PathPatternType) {
	o.PatternType = v
}

func (o ResourceMatchingEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["link"] = o.Link
	}
	if true {
		toSerialize["methods"] = o.Methods
	}
	if true {
		toSerialize["pattern"] = o.Pattern
	}
	if true {
		toSerialize["patternType"] = o.PatternType
	}
	return json.Marshal(toSerialize)
}

type NullableResourceMatchingEntry struct {
	value *ResourceMatchingEntry
	isSet bool
}

func (v NullableResourceMatchingEntry) Get() *ResourceMatchingEntry {
	return v.value
}

func (v *NullableResourceMatchingEntry) Set(val *ResourceMatchingEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceMatchingEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceMatchingEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceMatchingEntry(val *ResourceMatchingEntry) *NullableResourceMatchingEntry {
	return &NullableResourceMatchingEntry{value: val, isSet: true}
}

func (v NullableResourceMatchingEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceMatchingEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


