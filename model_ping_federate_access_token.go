/*
Administrative API Documentation

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API.

API version: 7.3.0.2-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the PingFederateAccessToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PingFederateAccessToken{}

// PingFederateAccessToken A PingAccess OAuth client configuration.
type PingFederateAccessToken struct {
	ClientCredentials *OAuthClientCredentials `json:"clientCredentials,omitempty"`
	// Enable to retain token details for subsequent requests.
	CacheTokens *bool `json:"cacheTokens,omitempty"`
	// Defines the number of seconds to cache the access token. -1 means no limit. This value should be less than the PingFederate Token Lifetime.
	TokenTimeToLiveSeconds *int64 `json:"tokenTimeToLiveSeconds,omitempty"`
	// The attribute you want to use from the OAuth access token as the subject for auditing purposes.
	SubjectAttributeName string `json:"subjectAttributeName"`
	// Enable to send the URI the user requested as the 'aud' OAuth parameter for PingAccess to use to select an Access Token Manager.
	SendAudience *bool `json:"sendAudience,omitempty"`
	// Specify if token introspection is enabled.
	UseTokenIntrospection *bool `json:"useTokenIntrospection,omitempty"`
	// The Access Validator Id. This field is read-only.
	AccessValidatorId int64 `json:"accessValidatorId"`
	// The unique Access Validator name. This field is read-only.
	Name         *string      `json:"name,omitempty"`
	ClientSecret *HiddenField `json:"clientSecret,omitempty"`
	// The Client ID which PingAccess should use when requesting PingFederate to validate access tokens. The client must have Access Token Validation grant type allowed. (DEPRECATED - to be removed in a future release; please use 'clientCredentials' instead)
	ClientId *string `json:"clientId,omitempty"`
}

// NewPingFederateAccessToken instantiates a new PingFederateAccessToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPingFederateAccessToken(subjectAttributeName string, accessValidatorId int64) *PingFederateAccessToken {
	this := PingFederateAccessToken{}
	this.SubjectAttributeName = subjectAttributeName
	this.AccessValidatorId = accessValidatorId
	return &this
}

// NewPingFederateAccessTokenWithDefaults instantiates a new PingFederateAccessToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingFederateAccessTokenWithDefaults() *PingFederateAccessToken {
	this := PingFederateAccessToken{}
	return &this
}

// GetClientCredentials returns the ClientCredentials field value if set, zero value otherwise.
func (o *PingFederateAccessToken) GetClientCredentials() OAuthClientCredentials {
	if o == nil || IsNil(o.ClientCredentials) {
		var ret OAuthClientCredentials
		return ret
	}
	return *o.ClientCredentials
}

// GetClientCredentialsOk returns a tuple with the ClientCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetClientCredentialsOk() (*OAuthClientCredentials, bool) {
	if o == nil || IsNil(o.ClientCredentials) {
		return nil, false
	}
	return o.ClientCredentials, true
}

// HasClientCredentials returns a boolean if a field has been set.
func (o *PingFederateAccessToken) HasClientCredentials() bool {
	if o != nil && !IsNil(o.ClientCredentials) {
		return true
	}

	return false
}

// SetClientCredentials gets a reference to the given OAuthClientCredentials and assigns it to the ClientCredentials field.
func (o *PingFederateAccessToken) SetClientCredentials(v OAuthClientCredentials) {
	o.ClientCredentials = &v
}

// GetCacheTokens returns the CacheTokens field value if set, zero value otherwise.
func (o *PingFederateAccessToken) GetCacheTokens() bool {
	if o == nil || IsNil(o.CacheTokens) {
		var ret bool
		return ret
	}
	return *o.CacheTokens
}

// GetCacheTokensOk returns a tuple with the CacheTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetCacheTokensOk() (*bool, bool) {
	if o == nil || IsNil(o.CacheTokens) {
		return nil, false
	}
	return o.CacheTokens, true
}

// HasCacheTokens returns a boolean if a field has been set.
func (o *PingFederateAccessToken) HasCacheTokens() bool {
	if o != nil && !IsNil(o.CacheTokens) {
		return true
	}

	return false
}

// SetCacheTokens gets a reference to the given bool and assigns it to the CacheTokens field.
func (o *PingFederateAccessToken) SetCacheTokens(v bool) {
	o.CacheTokens = &v
}

// GetTokenTimeToLiveSeconds returns the TokenTimeToLiveSeconds field value if set, zero value otherwise.
func (o *PingFederateAccessToken) GetTokenTimeToLiveSeconds() int64 {
	if o == nil || IsNil(o.TokenTimeToLiveSeconds) {
		var ret int64
		return ret
	}
	return *o.TokenTimeToLiveSeconds
}

// GetTokenTimeToLiveSecondsOk returns a tuple with the TokenTimeToLiveSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetTokenTimeToLiveSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.TokenTimeToLiveSeconds) {
		return nil, false
	}
	return o.TokenTimeToLiveSeconds, true
}

// HasTokenTimeToLiveSeconds returns a boolean if a field has been set.
func (o *PingFederateAccessToken) HasTokenTimeToLiveSeconds() bool {
	if o != nil && !IsNil(o.TokenTimeToLiveSeconds) {
		return true
	}

	return false
}

// SetTokenTimeToLiveSeconds gets a reference to the given int64 and assigns it to the TokenTimeToLiveSeconds field.
func (o *PingFederateAccessToken) SetTokenTimeToLiveSeconds(v int64) {
	o.TokenTimeToLiveSeconds = &v
}

// GetSubjectAttributeName returns the SubjectAttributeName field value
func (o *PingFederateAccessToken) GetSubjectAttributeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectAttributeName
}

// GetSubjectAttributeNameOk returns a tuple with the SubjectAttributeName field value
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetSubjectAttributeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectAttributeName, true
}

// SetSubjectAttributeName sets field value
func (o *PingFederateAccessToken) SetSubjectAttributeName(v string) {
	o.SubjectAttributeName = v
}

// GetSendAudience returns the SendAudience field value if set, zero value otherwise.
func (o *PingFederateAccessToken) GetSendAudience() bool {
	if o == nil || IsNil(o.SendAudience) {
		var ret bool
		return ret
	}
	return *o.SendAudience
}

// GetSendAudienceOk returns a tuple with the SendAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetSendAudienceOk() (*bool, bool) {
	if o == nil || IsNil(o.SendAudience) {
		return nil, false
	}
	return o.SendAudience, true
}

// HasSendAudience returns a boolean if a field has been set.
func (o *PingFederateAccessToken) HasSendAudience() bool {
	if o != nil && !IsNil(o.SendAudience) {
		return true
	}

	return false
}

// SetSendAudience gets a reference to the given bool and assigns it to the SendAudience field.
func (o *PingFederateAccessToken) SetSendAudience(v bool) {
	o.SendAudience = &v
}

// GetUseTokenIntrospection returns the UseTokenIntrospection field value if set, zero value otherwise.
func (o *PingFederateAccessToken) GetUseTokenIntrospection() bool {
	if o == nil || IsNil(o.UseTokenIntrospection) {
		var ret bool
		return ret
	}
	return *o.UseTokenIntrospection
}

// GetUseTokenIntrospectionOk returns a tuple with the UseTokenIntrospection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetUseTokenIntrospectionOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTokenIntrospection) {
		return nil, false
	}
	return o.UseTokenIntrospection, true
}

// HasUseTokenIntrospection returns a boolean if a field has been set.
func (o *PingFederateAccessToken) HasUseTokenIntrospection() bool {
	if o != nil && !IsNil(o.UseTokenIntrospection) {
		return true
	}

	return false
}

// SetUseTokenIntrospection gets a reference to the given bool and assigns it to the UseTokenIntrospection field.
func (o *PingFederateAccessToken) SetUseTokenIntrospection(v bool) {
	o.UseTokenIntrospection = &v
}

// GetAccessValidatorId returns the AccessValidatorId field value
func (o *PingFederateAccessToken) GetAccessValidatorId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccessValidatorId
}

// GetAccessValidatorIdOk returns a tuple with the AccessValidatorId field value
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetAccessValidatorIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessValidatorId, true
}

// SetAccessValidatorId sets field value
func (o *PingFederateAccessToken) SetAccessValidatorId(v int64) {
	o.AccessValidatorId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PingFederateAccessToken) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PingFederateAccessToken) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PingFederateAccessToken) SetName(v string) {
	o.Name = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *PingFederateAccessToken) GetClientSecret() HiddenField {
	if o == nil || IsNil(o.ClientSecret) {
		var ret HiddenField
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetClientSecretOk() (*HiddenField, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *PingFederateAccessToken) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given HiddenField and assigns it to the ClientSecret field.
func (o *PingFederateAccessToken) SetClientSecret(v HiddenField) {
	o.ClientSecret = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *PingFederateAccessToken) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingFederateAccessToken) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *PingFederateAccessToken) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *PingFederateAccessToken) SetClientId(v string) {
	o.ClientId = &v
}

func (o PingFederateAccessToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PingFederateAccessToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientCredentials) {
		toSerialize["clientCredentials"] = o.ClientCredentials
	}
	if !IsNil(o.CacheTokens) {
		toSerialize["cacheTokens"] = o.CacheTokens
	}
	if !IsNil(o.TokenTimeToLiveSeconds) {
		toSerialize["tokenTimeToLiveSeconds"] = o.TokenTimeToLiveSeconds
	}
	toSerialize["subjectAttributeName"] = o.SubjectAttributeName
	if !IsNil(o.SendAudience) {
		toSerialize["sendAudience"] = o.SendAudience
	}
	if !IsNil(o.UseTokenIntrospection) {
		toSerialize["useTokenIntrospection"] = o.UseTokenIntrospection
	}
	toSerialize["accessValidatorId"] = o.AccessValidatorId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	return toSerialize, nil
}

type NullablePingFederateAccessToken struct {
	value *PingFederateAccessToken
	isSet bool
}

func (v NullablePingFederateAccessToken) Get() *PingFederateAccessToken {
	return v.value
}

func (v *NullablePingFederateAccessToken) Set(val *PingFederateAccessToken) {
	v.value = val
	v.isSet = true
}

func (v NullablePingFederateAccessToken) IsSet() bool {
	return v.isSet
}

func (v *NullablePingFederateAccessToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingFederateAccessToken(val *PingFederateAccessToken) *NullablePingFederateAccessToken {
	return &NullablePingFederateAccessToken{value: val, isSet: true}
}

func (v NullablePingFederateAccessToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingFederateAccessToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
