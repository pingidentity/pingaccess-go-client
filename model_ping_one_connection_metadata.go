/*
Administrative API Documentation

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API.

API version: 7.3.0.2-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"time"
)

// checks if the PingOneConnectionMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PingOneConnectionMetadata{}

// PingOneConnectionMetadata Metadata capturing information about the configured PingOne Connection.
type PingOneConnectionMetadata struct {
	// The date this credential was created in PingOne.
	CreationDate time.Time `json:"creationDate"`
	// The ID of the PingOne credential.
	CredentialId string `json:"credentialId"`
	// The ID of the PingOne connection as defined by PingOne.
	PingOneConnectionId string `json:"pingOneConnectionId"`
	// The PingOne management API endpoint.
	PingOneManagementApiEndpoint string `json:"pingOneManagementApiEndpoint"`
	// The PingOne authentication API endpoint.
	PingOneAuthenticationApiEndpoint string                  `json:"pingOneAuthenticationApiEndpoint"`
	CredentialStatus                 PingOneCredentialStatus `json:"credentialStatus"`
	// A list of environments available to the PingOne Connection.
	Environments []PingOneEnvironment `json:"environments"`
	// The ID of the PingOne Connection as defined by PingAccess.
	Id string `json:"id"`
	// The ID of the environment of the PingOne credential.
	EnvironmentId *string `json:"environmentId,omitempty"`
	// The region of the PingOne connection.
	Region *string `json:"region,omitempty"`
	// The name of the organization associated with this PingOne connection.
	OrganizationName *string `json:"organizationName,omitempty"`
}

// NewPingOneConnectionMetadata instantiates a new PingOneConnectionMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPingOneConnectionMetadata(creationDate time.Time, credentialId string, pingOneConnectionId string, pingOneManagementApiEndpoint string, pingOneAuthenticationApiEndpoint string, credentialStatus PingOneCredentialStatus, environments []PingOneEnvironment, id string) *PingOneConnectionMetadata {
	this := PingOneConnectionMetadata{}
	this.CreationDate = creationDate
	this.CredentialId = credentialId
	this.PingOneConnectionId = pingOneConnectionId
	this.PingOneManagementApiEndpoint = pingOneManagementApiEndpoint
	this.PingOneAuthenticationApiEndpoint = pingOneAuthenticationApiEndpoint
	this.CredentialStatus = credentialStatus
	this.Environments = environments
	this.Id = id
	return &this
}

// NewPingOneConnectionMetadataWithDefaults instantiates a new PingOneConnectionMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingOneConnectionMetadataWithDefaults() *PingOneConnectionMetadata {
	this := PingOneConnectionMetadata{}
	return &this
}

// GetCreationDate returns the CreationDate field value
func (o *PingOneConnectionMetadata) GetCreationDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetCreationDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationDate, true
}

// SetCreationDate sets field value
func (o *PingOneConnectionMetadata) SetCreationDate(v time.Time) {
	o.CreationDate = v
}

// GetCredentialId returns the CredentialId field value
func (o *PingOneConnectionMetadata) GetCredentialId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CredentialId
}

// GetCredentialIdOk returns a tuple with the CredentialId field value
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetCredentialIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CredentialId, true
}

// SetCredentialId sets field value
func (o *PingOneConnectionMetadata) SetCredentialId(v string) {
	o.CredentialId = v
}

// GetPingOneConnectionId returns the PingOneConnectionId field value
func (o *PingOneConnectionMetadata) GetPingOneConnectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PingOneConnectionId
}

// GetPingOneConnectionIdOk returns a tuple with the PingOneConnectionId field value
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetPingOneConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PingOneConnectionId, true
}

// SetPingOneConnectionId sets field value
func (o *PingOneConnectionMetadata) SetPingOneConnectionId(v string) {
	o.PingOneConnectionId = v
}

// GetPingOneManagementApiEndpoint returns the PingOneManagementApiEndpoint field value
func (o *PingOneConnectionMetadata) GetPingOneManagementApiEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PingOneManagementApiEndpoint
}

// GetPingOneManagementApiEndpointOk returns a tuple with the PingOneManagementApiEndpoint field value
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetPingOneManagementApiEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PingOneManagementApiEndpoint, true
}

// SetPingOneManagementApiEndpoint sets field value
func (o *PingOneConnectionMetadata) SetPingOneManagementApiEndpoint(v string) {
	o.PingOneManagementApiEndpoint = v
}

// GetPingOneAuthenticationApiEndpoint returns the PingOneAuthenticationApiEndpoint field value
func (o *PingOneConnectionMetadata) GetPingOneAuthenticationApiEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PingOneAuthenticationApiEndpoint
}

// GetPingOneAuthenticationApiEndpointOk returns a tuple with the PingOneAuthenticationApiEndpoint field value
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetPingOneAuthenticationApiEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PingOneAuthenticationApiEndpoint, true
}

// SetPingOneAuthenticationApiEndpoint sets field value
func (o *PingOneConnectionMetadata) SetPingOneAuthenticationApiEndpoint(v string) {
	o.PingOneAuthenticationApiEndpoint = v
}

// GetCredentialStatus returns the CredentialStatus field value
func (o *PingOneConnectionMetadata) GetCredentialStatus() PingOneCredentialStatus {
	if o == nil {
		var ret PingOneCredentialStatus
		return ret
	}

	return o.CredentialStatus
}

// GetCredentialStatusOk returns a tuple with the CredentialStatus field value
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetCredentialStatusOk() (*PingOneCredentialStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CredentialStatus, true
}

// SetCredentialStatus sets field value
func (o *PingOneConnectionMetadata) SetCredentialStatus(v PingOneCredentialStatus) {
	o.CredentialStatus = v
}

// GetEnvironments returns the Environments field value
func (o *PingOneConnectionMetadata) GetEnvironments() []PingOneEnvironment {
	if o == nil {
		var ret []PingOneEnvironment
		return ret
	}

	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetEnvironmentsOk() ([]PingOneEnvironment, bool) {
	if o == nil {
		return nil, false
	}
	return o.Environments, true
}

// SetEnvironments sets field value
func (o *PingOneConnectionMetadata) SetEnvironments(v []PingOneEnvironment) {
	o.Environments = v
}

// GetId returns the Id field value
func (o *PingOneConnectionMetadata) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PingOneConnectionMetadata) SetId(v string) {
	o.Id = v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *PingOneConnectionMetadata) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *PingOneConnectionMetadata) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *PingOneConnectionMetadata) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PingOneConnectionMetadata) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PingOneConnectionMetadata) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PingOneConnectionMetadata) SetRegion(v string) {
	o.Region = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *PingOneConnectionMetadata) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOneConnectionMetadata) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *PingOneConnectionMetadata) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *PingOneConnectionMetadata) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

func (o PingOneConnectionMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PingOneConnectionMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["creationDate"] = o.CreationDate
	toSerialize["credentialId"] = o.CredentialId
	toSerialize["pingOneConnectionId"] = o.PingOneConnectionId
	toSerialize["pingOneManagementApiEndpoint"] = o.PingOneManagementApiEndpoint
	toSerialize["pingOneAuthenticationApiEndpoint"] = o.PingOneAuthenticationApiEndpoint
	toSerialize["credentialStatus"] = o.CredentialStatus
	toSerialize["environments"] = o.Environments
	toSerialize["id"] = o.Id
	if !IsNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	return toSerialize, nil
}

type NullablePingOneConnectionMetadata struct {
	value *PingOneConnectionMetadata
	isSet bool
}

func (v NullablePingOneConnectionMetadata) Get() *PingOneConnectionMetadata {
	return v.value
}

func (v *NullablePingOneConnectionMetadata) Set(val *PingOneConnectionMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullablePingOneConnectionMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullablePingOneConnectionMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingOneConnectionMetadata(val *PingOneConnectionMetadata) *NullablePingOneConnectionMetadata {
	return &NullablePingOneConnectionMetadata{value: val, isSet: true}
}

func (v NullablePingOneConnectionMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingOneConnectionMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
