/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CSRResponseImportDoc A CSR response.
type CSRResponseImportDoc struct {
	// The HSM Provider ID. The default value is 0 indicating an HSM is not used for this key pair.
	HsmProviderId int32 `json:"hsmProviderId"`
	// A list of base64-encoded certificates to add to the key pair certificate chain.
	ChainCertificates []string `json:"chainCertificates"`
	// The ID of the trusted certificate group associated with the CSR response.
	TrustedCertGroupId int32 `json:"trustedCertGroupId"`
	// The CSR response data.
	FileData string `json:"fileData"`
}

// NewCSRResponseImportDoc instantiates a new CSRResponseImportDoc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSRResponseImportDoc(hsmProviderId int32, chainCertificates []string, trustedCertGroupId int32, fileData string) *CSRResponseImportDoc {
	this := CSRResponseImportDoc{}
	this.HsmProviderId = hsmProviderId
	this.ChainCertificates = chainCertificates
	this.TrustedCertGroupId = trustedCertGroupId
	this.FileData = fileData
	return &this
}

// NewCSRResponseImportDocWithDefaults instantiates a new CSRResponseImportDoc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSRResponseImportDocWithDefaults() *CSRResponseImportDoc {
	this := CSRResponseImportDoc{}
	return &this
}

// GetHsmProviderId returns the HsmProviderId field value
func (o *CSRResponseImportDoc) GetHsmProviderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HsmProviderId
}

// GetHsmProviderIdOk returns a tuple with the HsmProviderId field value
// and a boolean to check if the value has been set.
func (o *CSRResponseImportDoc) GetHsmProviderIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HsmProviderId, true
}

// SetHsmProviderId sets field value
func (o *CSRResponseImportDoc) SetHsmProviderId(v int32) {
	o.HsmProviderId = v
}

// GetChainCertificates returns the ChainCertificates field value
func (o *CSRResponseImportDoc) GetChainCertificates() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ChainCertificates
}

// GetChainCertificatesOk returns a tuple with the ChainCertificates field value
// and a boolean to check if the value has been set.
func (o *CSRResponseImportDoc) GetChainCertificatesOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ChainCertificates, true
}

// SetChainCertificates sets field value
func (o *CSRResponseImportDoc) SetChainCertificates(v []string) {
	o.ChainCertificates = v
}

// GetTrustedCertGroupId returns the TrustedCertGroupId field value
func (o *CSRResponseImportDoc) GetTrustedCertGroupId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TrustedCertGroupId
}

// GetTrustedCertGroupIdOk returns a tuple with the TrustedCertGroupId field value
// and a boolean to check if the value has been set.
func (o *CSRResponseImportDoc) GetTrustedCertGroupIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TrustedCertGroupId, true
}

// SetTrustedCertGroupId sets field value
func (o *CSRResponseImportDoc) SetTrustedCertGroupId(v int32) {
	o.TrustedCertGroupId = v
}

// GetFileData returns the FileData field value
func (o *CSRResponseImportDoc) GetFileData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileData
}

// GetFileDataOk returns a tuple with the FileData field value
// and a boolean to check if the value has been set.
func (o *CSRResponseImportDoc) GetFileDataOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FileData, true
}

// SetFileData sets field value
func (o *CSRResponseImportDoc) SetFileData(v string) {
	o.FileData = v
}

func (o CSRResponseImportDoc) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hsmProviderId"] = o.HsmProviderId
	}
	if true {
		toSerialize["chainCertificates"] = o.ChainCertificates
	}
	if true {
		toSerialize["trustedCertGroupId"] = o.TrustedCertGroupId
	}
	if true {
		toSerialize["fileData"] = o.FileData
	}
	return json.Marshal(toSerialize)
}

type NullableCSRResponseImportDoc struct {
	value *CSRResponseImportDoc
	isSet bool
}

func (v NullableCSRResponseImportDoc) Get() *CSRResponseImportDoc {
	return v.value
}

func (v *NullableCSRResponseImportDoc) Set(val *CSRResponseImportDoc) {
	v.value = val
	v.isSet = true
}

func (v NullableCSRResponseImportDoc) IsSet() bool {
	return v.isSet
}

func (v *NullableCSRResponseImportDoc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSRResponseImportDoc(val *CSRResponseImportDoc) *NullableCSRResponseImportDoc {
	return &NullableCSRResponseImportDoc{value: val, isSet: true}
}

func (v NullableCSRResponseImportDoc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSRResponseImportDoc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


