/*
Administrative API Documentation

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API.

API version: 7.3.0.2-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the UnknownResourceSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnknownResourceSettings{}

// UnknownResourceSettings Global settings for unknown resources.
type UnknownResourceSettings struct {
	// The HTTP error response status code
	ErrorStatusCode int64 `json:"errorStatusCode"`
	// The name of the velocity template file to use for generating the error response body
	ErrorTemplateFile string              `json:"errorTemplateFile"`
	ErrorContentType  ContentType         `json:"errorContentType"`
	AgentDefaultMode  UnknownResourceMode `json:"agentDefaultMode"`
	// The default agent resource cache TTL (in seconds) to be used for unknown resources when a request cannot be mapped to a known virtual host.
	AgentDefaultCacheTTL int64       `json:"agentDefaultCacheTTL"`
	AuditLevel           *AuditLevel `json:"auditLevel,omitempty"`
}

// NewUnknownResourceSettings instantiates a new UnknownResourceSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnknownResourceSettings(errorStatusCode int64, errorTemplateFile string, errorContentType ContentType, agentDefaultMode UnknownResourceMode, agentDefaultCacheTTL int64) *UnknownResourceSettings {
	this := UnknownResourceSettings{}
	this.ErrorStatusCode = errorStatusCode
	this.ErrorTemplateFile = errorTemplateFile
	this.ErrorContentType = errorContentType
	this.AgentDefaultMode = agentDefaultMode
	this.AgentDefaultCacheTTL = agentDefaultCacheTTL
	return &this
}

// NewUnknownResourceSettingsWithDefaults instantiates a new UnknownResourceSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnknownResourceSettingsWithDefaults() *UnknownResourceSettings {
	this := UnknownResourceSettings{}
	return &this
}

// GetErrorStatusCode returns the ErrorStatusCode field value
func (o *UnknownResourceSettings) GetErrorStatusCode() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ErrorStatusCode
}

// GetErrorStatusCodeOk returns a tuple with the ErrorStatusCode field value
// and a boolean to check if the value has been set.
func (o *UnknownResourceSettings) GetErrorStatusCodeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorStatusCode, true
}

// SetErrorStatusCode sets field value
func (o *UnknownResourceSettings) SetErrorStatusCode(v int64) {
	o.ErrorStatusCode = v
}

// GetErrorTemplateFile returns the ErrorTemplateFile field value
func (o *UnknownResourceSettings) GetErrorTemplateFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorTemplateFile
}

// GetErrorTemplateFileOk returns a tuple with the ErrorTemplateFile field value
// and a boolean to check if the value has been set.
func (o *UnknownResourceSettings) GetErrorTemplateFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorTemplateFile, true
}

// SetErrorTemplateFile sets field value
func (o *UnknownResourceSettings) SetErrorTemplateFile(v string) {
	o.ErrorTemplateFile = v
}

// GetErrorContentType returns the ErrorContentType field value
func (o *UnknownResourceSettings) GetErrorContentType() ContentType {
	if o == nil {
		var ret ContentType
		return ret
	}

	return o.ErrorContentType
}

// GetErrorContentTypeOk returns a tuple with the ErrorContentType field value
// and a boolean to check if the value has been set.
func (o *UnknownResourceSettings) GetErrorContentTypeOk() (*ContentType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorContentType, true
}

// SetErrorContentType sets field value
func (o *UnknownResourceSettings) SetErrorContentType(v ContentType) {
	o.ErrorContentType = v
}

// GetAgentDefaultMode returns the AgentDefaultMode field value
func (o *UnknownResourceSettings) GetAgentDefaultMode() UnknownResourceMode {
	if o == nil {
		var ret UnknownResourceMode
		return ret
	}

	return o.AgentDefaultMode
}

// GetAgentDefaultModeOk returns a tuple with the AgentDefaultMode field value
// and a boolean to check if the value has been set.
func (o *UnknownResourceSettings) GetAgentDefaultModeOk() (*UnknownResourceMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentDefaultMode, true
}

// SetAgentDefaultMode sets field value
func (o *UnknownResourceSettings) SetAgentDefaultMode(v UnknownResourceMode) {
	o.AgentDefaultMode = v
}

// GetAgentDefaultCacheTTL returns the AgentDefaultCacheTTL field value
func (o *UnknownResourceSettings) GetAgentDefaultCacheTTL() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AgentDefaultCacheTTL
}

// GetAgentDefaultCacheTTLOk returns a tuple with the AgentDefaultCacheTTL field value
// and a boolean to check if the value has been set.
func (o *UnknownResourceSettings) GetAgentDefaultCacheTTLOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentDefaultCacheTTL, true
}

// SetAgentDefaultCacheTTL sets field value
func (o *UnknownResourceSettings) SetAgentDefaultCacheTTL(v int64) {
	o.AgentDefaultCacheTTL = v
}

// GetAuditLevel returns the AuditLevel field value if set, zero value otherwise.
func (o *UnknownResourceSettings) GetAuditLevel() AuditLevel {
	if o == nil || IsNil(o.AuditLevel) {
		var ret AuditLevel
		return ret
	}
	return *o.AuditLevel
}

// GetAuditLevelOk returns a tuple with the AuditLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnknownResourceSettings) GetAuditLevelOk() (*AuditLevel, bool) {
	if o == nil || IsNil(o.AuditLevel) {
		return nil, false
	}
	return o.AuditLevel, true
}

// HasAuditLevel returns a boolean if a field has been set.
func (o *UnknownResourceSettings) HasAuditLevel() bool {
	if o != nil && !IsNil(o.AuditLevel) {
		return true
	}

	return false
}

// SetAuditLevel gets a reference to the given AuditLevel and assigns it to the AuditLevel field.
func (o *UnknownResourceSettings) SetAuditLevel(v AuditLevel) {
	o.AuditLevel = &v
}

func (o UnknownResourceSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnknownResourceSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["errorStatusCode"] = o.ErrorStatusCode
	toSerialize["errorTemplateFile"] = o.ErrorTemplateFile
	toSerialize["errorContentType"] = o.ErrorContentType
	toSerialize["agentDefaultMode"] = o.AgentDefaultMode
	toSerialize["agentDefaultCacheTTL"] = o.AgentDefaultCacheTTL
	if !IsNil(o.AuditLevel) {
		toSerialize["auditLevel"] = o.AuditLevel
	}
	return toSerialize, nil
}

type NullableUnknownResourceSettings struct {
	value *UnknownResourceSettings
	isSet bool
}

func (v NullableUnknownResourceSettings) Get() *UnknownResourceSettings {
	return v.value
}

func (v *NullableUnknownResourceSettings) Set(val *UnknownResourceSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableUnknownResourceSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableUnknownResourceSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnknownResourceSettings(val *UnknownResourceSettings) *NullableUnknownResourceSettings {
	return &NullableUnknownResourceSettings{value: val, isSet: true}
}

func (v NullableUnknownResourceSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnknownResourceSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
