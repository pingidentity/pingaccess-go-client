/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HttpClientProxy A proxy.
type HttpClientProxy struct {
	// When creating a new HttpClientProxy, this is the ID for the HttpClientProxy. If not specified, an ID will be automatically assigned. When updating an existing HttpClientProxy, this field is ignored and the ID is determined by the path parameter.
	Id *int32 `json:"id,omitempty"`
	// (sortable) The name of the proxy.
	Name string `json:"name"`
	// (sortable) The proxy host.
	Host string `json:"host"`
	// (sortable) The proxy port.
	Port int32 `json:"port"`
	// (sortable) A description of the proxy.
	Description *string `json:"description,omitempty"`
	// (sortable) True if the proxy requires authentication.
	RequiresAuthentication *bool `json:"requiresAuthentication,omitempty"`
	// (sortable) The username used for proxy authentication.
	Username *string `json:"username,omitempty"`
	Password *HiddenField `json:"password,omitempty"`
}

// NewHttpClientProxy instantiates a new HttpClientProxy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpClientProxy(name string, host string, port int32) *HttpClientProxy {
	this := HttpClientProxy{}
	this.Name = name
	this.Host = host
	this.Port = port
	return &this
}

// NewHttpClientProxyWithDefaults instantiates a new HttpClientProxy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpClientProxyWithDefaults() *HttpClientProxy {
	this := HttpClientProxy{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HttpClientProxy) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpClientProxy) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HttpClientProxy) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *HttpClientProxy) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *HttpClientProxy) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HttpClientProxy) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HttpClientProxy) SetName(v string) {
	o.Name = v
}

// GetHost returns the Host field value
func (o *HttpClientProxy) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *HttpClientProxy) GetHostOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *HttpClientProxy) SetHost(v string) {
	o.Host = v
}

// GetPort returns the Port field value
func (o *HttpClientProxy) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *HttpClientProxy) GetPortOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *HttpClientProxy) SetPort(v int32) {
	o.Port = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HttpClientProxy) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpClientProxy) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HttpClientProxy) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HttpClientProxy) SetDescription(v string) {
	o.Description = &v
}

// GetRequiresAuthentication returns the RequiresAuthentication field value if set, zero value otherwise.
func (o *HttpClientProxy) GetRequiresAuthentication() bool {
	if o == nil || isNil(o.RequiresAuthentication) {
		var ret bool
		return ret
	}
	return *o.RequiresAuthentication
}

// GetRequiresAuthenticationOk returns a tuple with the RequiresAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpClientProxy) GetRequiresAuthenticationOk() (*bool, bool) {
	if o == nil || isNil(o.RequiresAuthentication) {
    return nil, false
	}
	return o.RequiresAuthentication, true
}

// HasRequiresAuthentication returns a boolean if a field has been set.
func (o *HttpClientProxy) HasRequiresAuthentication() bool {
	if o != nil && !isNil(o.RequiresAuthentication) {
		return true
	}

	return false
}

// SetRequiresAuthentication gets a reference to the given bool and assigns it to the RequiresAuthentication field.
func (o *HttpClientProxy) SetRequiresAuthentication(v bool) {
	o.RequiresAuthentication = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *HttpClientProxy) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpClientProxy) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *HttpClientProxy) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *HttpClientProxy) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *HttpClientProxy) GetPassword() HiddenField {
	if o == nil || isNil(o.Password) {
		var ret HiddenField
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpClientProxy) GetPasswordOk() (*HiddenField, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *HttpClientProxy) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given HiddenField and assigns it to the Password field.
func (o *HttpClientProxy) SetPassword(v HiddenField) {
	o.Password = &v
}

func (o HttpClientProxy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["host"] = o.Host
	}
	if true {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.RequiresAuthentication) {
		toSerialize["requiresAuthentication"] = o.RequiresAuthentication
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableHttpClientProxy struct {
	value *HttpClientProxy
	isSet bool
}

func (v NullableHttpClientProxy) Get() *HttpClientProxy {
	return v.value
}

func (v *NullableHttpClientProxy) Set(val *HttpClientProxy) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpClientProxy) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpClientProxy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpClientProxy(val *HttpClientProxy) *NullableHttpClientProxy {
	return &NullableHttpClientProxy{value: val, isSet: true}
}

func (v NullableHttpClientProxy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpClientProxy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


