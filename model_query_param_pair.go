/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QueryParamPair struct for QueryParamPair
type QueryParamPair struct {
	Name *QueryParamName `json:"name,omitempty"`
	Value *QueryParamValue `json:"value,omitempty"`
}

// NewQueryParamPair instantiates a new QueryParamPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryParamPair() *QueryParamPair {
	this := QueryParamPair{}
	return &this
}

// NewQueryParamPairWithDefaults instantiates a new QueryParamPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryParamPairWithDefaults() *QueryParamPair {
	this := QueryParamPair{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QueryParamPair) GetName() QueryParamName {
	if o == nil || isNil(o.Name) {
		var ret QueryParamName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryParamPair) GetNameOk() (*QueryParamName, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QueryParamPair) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given QueryParamName and assigns it to the Name field.
func (o *QueryParamPair) SetName(v QueryParamName) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *QueryParamPair) GetValue() QueryParamValue {
	if o == nil || isNil(o.Value) {
		var ret QueryParamValue
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryParamPair) GetValueOk() (*QueryParamValue, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *QueryParamPair) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given QueryParamValue and assigns it to the Value field.
func (o *QueryParamPair) SetValue(v QueryParamValue) {
	o.Value = &v
}

func (o QueryParamPair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableQueryParamPair struct {
	value *QueryParamPair
	isSet bool
}

func (v NullableQueryParamPair) Get() *QueryParamPair {
	return v.value
}

func (v *NullableQueryParamPair) Set(val *QueryParamPair) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryParamPair) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryParamPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryParamPair(val *QueryParamPair) *NullableQueryParamPair {
	return &NullableQueryParamPair{value: val, isSet: true}
}

func (v NullableQueryParamPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryParamPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


