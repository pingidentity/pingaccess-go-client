/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SidebandClients A collection of sideband clients.
type SidebandClients struct {
	// The actual list of sideband clients.
	Items []SidebandClient `json:"items"`
}

// NewSidebandClients instantiates a new SidebandClients object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSidebandClients(items []SidebandClient) *SidebandClients {
	this := SidebandClients{}
	this.Items = items
	return &this
}

// NewSidebandClientsWithDefaults instantiates a new SidebandClients object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSidebandClientsWithDefaults() *SidebandClients {
	this := SidebandClients{}
	return &this
}

// GetItems returns the Items field value
func (o *SidebandClients) GetItems() []SidebandClient {
	if o == nil {
		var ret []SidebandClient
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SidebandClients) GetItemsOk() ([]SidebandClient, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *SidebandClients) SetItems(v []SidebandClient) {
	o.Items = v
}

func (o SidebandClients) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableSidebandClients struct {
	value *SidebandClients
	isSet bool
}

func (v NullableSidebandClients) Get() *SidebandClients {
	return v.value
}

func (v *NullableSidebandClients) Set(val *SidebandClients) {
	v.value = val
	v.isSet = true
}

func (v NullableSidebandClients) IsSet() bool {
	return v.isSet
}

func (v *NullableSidebandClients) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSidebandClients(val *SidebandClients) *NullableSidebandClients {
	return &NullableSidebandClients{value: val, isSet: true}
}

func (v NullableSidebandClients) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSidebandClients) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


