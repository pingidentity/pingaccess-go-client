/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GlobalUnprotectedResources A collection of global unprotected resource items.
type GlobalUnprotectedResources struct {
	// The list of global unprotected resources.
	Items []GlobalUnprotectedResource `json:"items"`
}

// NewGlobalUnprotectedResources instantiates a new GlobalUnprotectedResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalUnprotectedResources(items []GlobalUnprotectedResource) *GlobalUnprotectedResources {
	this := GlobalUnprotectedResources{}
	this.Items = items
	return &this
}

// NewGlobalUnprotectedResourcesWithDefaults instantiates a new GlobalUnprotectedResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalUnprotectedResourcesWithDefaults() *GlobalUnprotectedResources {
	this := GlobalUnprotectedResources{}
	return &this
}

// GetItems returns the Items field value
func (o *GlobalUnprotectedResources) GetItems() []GlobalUnprotectedResource {
	if o == nil {
		var ret []GlobalUnprotectedResource
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *GlobalUnprotectedResources) GetItemsOk() ([]GlobalUnprotectedResource, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *GlobalUnprotectedResources) SetItems(v []GlobalUnprotectedResource) {
	o.Items = v
}

func (o GlobalUnprotectedResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableGlobalUnprotectedResources struct {
	value *GlobalUnprotectedResources
	isSet bool
}

func (v NullableGlobalUnprotectedResources) Get() *GlobalUnprotectedResources {
	return v.value
}

func (v *NullableGlobalUnprotectedResources) Set(val *GlobalUnprotectedResources) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalUnprotectedResources) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalUnprotectedResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalUnprotectedResources(val *GlobalUnprotectedResources) *NullableGlobalUnprotectedResources {
	return &NullableGlobalUnprotectedResources{value: val, isSet: true}
}

func (v NullableGlobalUnprotectedResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalUnprotectedResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


