/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequiredAttributeMapping A set of user attributes that define a mandatory role mapping.
type RequiredAttributeMapping struct {
	// The attributes that define the role.
	Attributes []Attribute `json:"attributes"`
}

// NewRequiredAttributeMapping instantiates a new RequiredAttributeMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequiredAttributeMapping(attributes []Attribute) *RequiredAttributeMapping {
	this := RequiredAttributeMapping{}
	this.Attributes = attributes
	return &this
}

// NewRequiredAttributeMappingWithDefaults instantiates a new RequiredAttributeMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequiredAttributeMappingWithDefaults() *RequiredAttributeMapping {
	this := RequiredAttributeMapping{}
	return &this
}

// GetAttributes returns the Attributes field value
func (o *RequiredAttributeMapping) GetAttributes() []Attribute {
	if o == nil {
		var ret []Attribute
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *RequiredAttributeMapping) GetAttributesOk() ([]Attribute, bool) {
	if o == nil {
    return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *RequiredAttributeMapping) SetAttributes(v []Attribute) {
	o.Attributes = v
}

func (o RequiredAttributeMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableRequiredAttributeMapping struct {
	value *RequiredAttributeMapping
	isSet bool
}

func (v NullableRequiredAttributeMapping) Get() *RequiredAttributeMapping {
	return v.value
}

func (v *NullableRequiredAttributeMapping) Set(val *RequiredAttributeMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableRequiredAttributeMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableRequiredAttributeMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequiredAttributeMapping(val *RequiredAttributeMapping) *NullableRequiredAttributeMapping {
	return &NullableRequiredAttributeMapping{value: val, isSet: true}
}

func (v NullableRequiredAttributeMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequiredAttributeMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


