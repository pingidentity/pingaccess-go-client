/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EngineListeners A collection of engine listeners.
type EngineListeners struct {
	// An array of engine listeners.
	Items []EngineListener `json:"items"`
}

// NewEngineListeners instantiates a new EngineListeners object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEngineListeners(items []EngineListener) *EngineListeners {
	this := EngineListeners{}
	this.Items = items
	return &this
}

// NewEngineListenersWithDefaults instantiates a new EngineListeners object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEngineListenersWithDefaults() *EngineListeners {
	this := EngineListeners{}
	return &this
}

// GetItems returns the Items field value
func (o *EngineListeners) GetItems() []EngineListener {
	if o == nil {
		var ret []EngineListener
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *EngineListeners) GetItemsOk() ([]EngineListener, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *EngineListeners) SetItems(v []EngineListener) {
	o.Items = v
}

func (o EngineListeners) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableEngineListeners struct {
	value *EngineListeners
	isSet bool
}

func (v NullableEngineListeners) Get() *EngineListeners {
	return v.value
}

func (v *NullableEngineListeners) Set(val *EngineListeners) {
	v.value = val
	v.isSet = true
}

func (v NullableEngineListeners) IsSet() bool {
	return v.isSet
}

func (v *NullableEngineListeners) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEngineListeners(val *EngineListeners) *NullableEngineListeners {
	return &NullableEngineListeners{value: val, isSet: true}
}

func (v NullableEngineListeners) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEngineListeners) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


