/*
Administrative API Documentation

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API.

API version: 7.3.0.2-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the EngineInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EngineInfo{}

// EngineInfo Information on an engine.
type EngineInfo struct {
	// The polling delay of the engine.
	PollingDelay int64 `json:"pollingDelay"`
	// The date the engine was created.
	CreatedAt int64 `json:"createdAt"`
	// The last updated date.
	LastUpdated int64 `json:"lastUpdated"`
	// The description of the engine.
	Description string `json:"description"`
	// The name of the engine.
	Name string `json:"name"`
}

// NewEngineInfo instantiates a new EngineInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEngineInfo(pollingDelay int64, createdAt int64, lastUpdated int64, description string, name string) *EngineInfo {
	this := EngineInfo{}
	this.PollingDelay = pollingDelay
	this.CreatedAt = createdAt
	this.LastUpdated = lastUpdated
	this.Description = description
	this.Name = name
	return &this
}

// NewEngineInfoWithDefaults instantiates a new EngineInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEngineInfoWithDefaults() *EngineInfo {
	this := EngineInfo{}
	return &this
}

// GetPollingDelay returns the PollingDelay field value
func (o *EngineInfo) GetPollingDelay() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PollingDelay
}

// GetPollingDelayOk returns a tuple with the PollingDelay field value
// and a boolean to check if the value has been set.
func (o *EngineInfo) GetPollingDelayOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PollingDelay, true
}

// SetPollingDelay sets field value
func (o *EngineInfo) SetPollingDelay(v int64) {
	o.PollingDelay = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *EngineInfo) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EngineInfo) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EngineInfo) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetLastUpdated returns the LastUpdated field value
func (o *EngineInfo) GetLastUpdated() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *EngineInfo) GetLastUpdatedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *EngineInfo) SetLastUpdated(v int64) {
	o.LastUpdated = v
}

// GetDescription returns the Description field value
func (o *EngineInfo) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *EngineInfo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *EngineInfo) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *EngineInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EngineInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EngineInfo) SetName(v string) {
	o.Name = v
}

func (o EngineInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EngineInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pollingDelay"] = o.PollingDelay
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["lastUpdated"] = o.LastUpdated
	toSerialize["description"] = o.Description
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableEngineInfo struct {
	value *EngineInfo
	isSet bool
}

func (v NullableEngineInfo) Get() *EngineInfo {
	return v.value
}

func (v *NullableEngineInfo) Set(val *EngineInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEngineInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEngineInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEngineInfo(val *EngineInfo) *NullableEngineInfo {
	return &NullableEngineInfo{value: val, isSet: true}
}

func (v NullableEngineInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEngineInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
