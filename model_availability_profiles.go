/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AvailabilityProfiles A collection of availability profiles.
type AvailabilityProfiles struct {
	// An array of availability profiles.
	Items []AvailabilityProfile `json:"items"`
}

// NewAvailabilityProfiles instantiates a new AvailabilityProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityProfiles(items []AvailabilityProfile) *AvailabilityProfiles {
	this := AvailabilityProfiles{}
	this.Items = items
	return &this
}

// NewAvailabilityProfilesWithDefaults instantiates a new AvailabilityProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityProfilesWithDefaults() *AvailabilityProfiles {
	this := AvailabilityProfiles{}
	return &this
}

// GetItems returns the Items field value
func (o *AvailabilityProfiles) GetItems() []AvailabilityProfile {
	if o == nil {
		var ret []AvailabilityProfile
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *AvailabilityProfiles) GetItemsOk() ([]AvailabilityProfile, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *AvailabilityProfiles) SetItems(v []AvailabilityProfile) {
	o.Items = v
}

func (o AvailabilityProfiles) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableAvailabilityProfiles struct {
	value *AvailabilityProfiles
	isSet bool
}

func (v NullableAvailabilityProfiles) Get() *AvailabilityProfiles {
	return v.value
}

func (v *NullableAvailabilityProfiles) Set(val *AvailabilityProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityProfiles(val *AvailabilityProfiles) *NullableAvailabilityProfiles {
	return &NullableAvailabilityProfiles{value: val, isSet: true}
}

func (v NullableAvailabilityProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


