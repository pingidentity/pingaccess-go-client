/*
Administrative API Documentation

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API.

API version: 7.3.0.2-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"time"
)

// checks if the SidebandClientCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SidebandClientCredentials{}

// SidebandClientCredentials The sideband client credentials.
type SidebandClientCredentials struct {
	// The created date of the credentials as the number of milliseconds since January 1, 1970, 00:00:00 GMT.
	Created            *time.Time                     `json:"created,omitempty"`
	CredentialsType    *SidebandClientCredentialsType `json:"credentialsType,omitempty"`
	SharedSecretConfig SidebandSharedSecretConfig     `json:"sharedSecretConfig"`
}

// NewSidebandClientCredentials instantiates a new SidebandClientCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSidebandClientCredentials(sharedSecretConfig SidebandSharedSecretConfig) *SidebandClientCredentials {
	this := SidebandClientCredentials{}
	this.SharedSecretConfig = sharedSecretConfig
	return &this
}

// NewSidebandClientCredentialsWithDefaults instantiates a new SidebandClientCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSidebandClientCredentialsWithDefaults() *SidebandClientCredentials {
	this := SidebandClientCredentials{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *SidebandClientCredentials) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidebandClientCredentials) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *SidebandClientCredentials) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *SidebandClientCredentials) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCredentialsType returns the CredentialsType field value if set, zero value otherwise.
func (o *SidebandClientCredentials) GetCredentialsType() SidebandClientCredentialsType {
	if o == nil || IsNil(o.CredentialsType) {
		var ret SidebandClientCredentialsType
		return ret
	}
	return *o.CredentialsType
}

// GetCredentialsTypeOk returns a tuple with the CredentialsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidebandClientCredentials) GetCredentialsTypeOk() (*SidebandClientCredentialsType, bool) {
	if o == nil || IsNil(o.CredentialsType) {
		return nil, false
	}
	return o.CredentialsType, true
}

// HasCredentialsType returns a boolean if a field has been set.
func (o *SidebandClientCredentials) HasCredentialsType() bool {
	if o != nil && !IsNil(o.CredentialsType) {
		return true
	}

	return false
}

// SetCredentialsType gets a reference to the given SidebandClientCredentialsType and assigns it to the CredentialsType field.
func (o *SidebandClientCredentials) SetCredentialsType(v SidebandClientCredentialsType) {
	o.CredentialsType = &v
}

// GetSharedSecretConfig returns the SharedSecretConfig field value
func (o *SidebandClientCredentials) GetSharedSecretConfig() SidebandSharedSecretConfig {
	if o == nil {
		var ret SidebandSharedSecretConfig
		return ret
	}

	return o.SharedSecretConfig
}

// GetSharedSecretConfigOk returns a tuple with the SharedSecretConfig field value
// and a boolean to check if the value has been set.
func (o *SidebandClientCredentials) GetSharedSecretConfigOk() (*SidebandSharedSecretConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedSecretConfig, true
}

// SetSharedSecretConfig sets field value
func (o *SidebandClientCredentials) SetSharedSecretConfig(v SidebandSharedSecretConfig) {
	o.SharedSecretConfig = v
}

func (o SidebandClientCredentials) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SidebandClientCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CredentialsType) {
		toSerialize["credentialsType"] = o.CredentialsType
	}
	toSerialize["sharedSecretConfig"] = o.SharedSecretConfig
	return toSerialize, nil
}

type NullableSidebandClientCredentials struct {
	value *SidebandClientCredentials
	isSet bool
}

func (v NullableSidebandClientCredentials) Get() *SidebandClientCredentials {
	return v.value
}

func (v *NullableSidebandClientCredentials) Set(val *SidebandClientCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableSidebandClientCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableSidebandClientCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSidebandClientCredentials(val *SidebandClientCredentials) *NullableSidebandClientCredentials {
	return &NullableSidebandClientCredentials{value: val, isSet: true}
}

func (v NullableSidebandClientCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSidebandClientCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
