/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SidebandClientCredentialsType the model 'SidebandClientCredentialsType'
type SidebandClientCredentialsType string

// List of SidebandClientCredentialsType
const (
	SIDEBANDCLIENTCREDENTIALSTYPE_SECRET SidebandClientCredentialsType = "SECRET"
)

// All allowed values of SidebandClientCredentialsType enum
var AllowedSidebandClientCredentialsTypeEnumValues = []SidebandClientCredentialsType{
	"SECRET",
}

func (v *SidebandClientCredentialsType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SidebandClientCredentialsType(value)
	for _, existing := range AllowedSidebandClientCredentialsTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SidebandClientCredentialsType", value)
}

// NewSidebandClientCredentialsTypeFromValue returns a pointer to a valid SidebandClientCredentialsType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSidebandClientCredentialsTypeFromValue(v string) (*SidebandClientCredentialsType, error) {
	ev := SidebandClientCredentialsType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SidebandClientCredentialsType: valid values are %v", v, AllowedSidebandClientCredentialsTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SidebandClientCredentialsType) IsValid() bool {
	for _, existing := range AllowedSidebandClientCredentialsTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SidebandClientCredentialsType value
func (v SidebandClientCredentialsType) Ptr() *SidebandClientCredentialsType {
	return &v
}

type NullableSidebandClientCredentialsType struct {
	value *SidebandClientCredentialsType
	isSet bool
}

func (v NullableSidebandClientCredentialsType) Get() *SidebandClientCredentialsType {
	return v.value
}

func (v *NullableSidebandClientCredentialsType) Set(val *SidebandClientCredentialsType) {
	v.value = val
	v.isSet = true
}

func (v NullableSidebandClientCredentialsType) IsSet() bool {
	return v.isSet
}

func (v *NullableSidebandClientCredentialsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSidebandClientCredentialsType(val *SidebandClientCredentialsType) *NullableSidebandClientCredentialsType {
	return &NullableSidebandClientCredentialsType{value: val, isSet: true}
}

func (v NullableSidebandClientCredentialsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSidebandClientCredentialsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

