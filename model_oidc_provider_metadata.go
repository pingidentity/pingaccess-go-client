/*
Administrative API Documentation

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API.

API version: 7.3.0.2-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the OIDCProviderMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OIDCProviderMetadata{}

// OIDCProviderMetadata The OpenID Connect provider's metadata.
type OIDCProviderMetadata struct {
	// OpenID Connect provider's issuer identifier URL.
	Issuer *string `json:"issuer,omitempty"`
	// URL of the OpenID Connect provider's authorization endpoint.
	AuthorizationEndpoint *string `json:"authorization_endpoint,omitempty"`
	// URL of the OpenID Connect provider's token endpoint.
	TokenEndpoint *string `json:"token_endpoint,omitempty"`
	// URL of the OpenID Connect provider's OAuth 2.0 revocation endpoint.
	RevocationEndpoint *string `json:"revocation_endpoint,omitempty"`
	// URL of the OpenID Connect provider's userInfo endpoint.
	UserinfoEndpoint *string `json:"userinfo_endpoint,omitempty"`
	// URL of the OpenID Connect provider's OAuth 2.0 introspection endpoint.
	IntrospectionEndpoint *string `json:"introspection_endpoint,omitempty"`
	// URL of the OpenID Connect provider's JWK Set document.
	JwksUri *string `json:"jwks_uri,omitempty"`
	// JSON array containing a list of the OAuth 2.0 \"scope\" values that this OpenID Connect provider supports.
	ScopesSupported []string `json:"scopes_supported,omitempty"`
	// JSON array containing a list of the claim names of the claims that the OpenID Connect provider MAY be able to supply values for.
	ClaimsSupported []string `json:"claims_supported,omitempty"`
	// JSON array containing a list of the OAuth 2.0 \"response_type\" values that this OpenID Connect provider supports.
	ResponseTypesSupported []string `json:"response_types_supported,omitempty"`
	// JSON array containing a list of the OAuth 2.0 \"response_mode\" values that this OpenID Connect provider supports.
	ResponseModesSupported []string `json:"response_modes_supported,omitempty"`
	// JSON array containing a list of the Subject Identifier types that this OpenID Connect provider supports.
	SubjectTypesSupported []string `json:"subject_types_supported,omitempty"`
	// JSON array containing a list of the JWS signing algorithms supported by the OpenID Connect provider for the id token to encode the claims in a JWT.
	IdTokenSigningAlgValuesSupported []string `json:"id_token_signing_alg_values_supported,omitempty"`
	// JSON array containing a list of client authentication methods supported by this token endpoint.
	TokenEndpointAuthMethodsSupported []string `json:"token_endpoint_auth_methods_supported,omitempty"`
	// JSON array containing a list of client authentication signing algorithms supported by this token endpoint.
	TokenEndpointAuthSigningAlgValuesSupported []string `json:"token_endpoint_auth_signing_alg_values_supported,omitempty"`
	// JSON array containing a list of the claim types that the OpenID Connect provider supports.
	ClaimTypesSupported []string `json:"claim_types_supported,omitempty"`
	// Proof Key for Code Exchange (PKCE) code challenge methods supported by this OpenID Connect provider.
	CodeChallengeMethodsSupported []string `json:"code_challenge_methods_supported,omitempty"`
	// boolean value specifying whether the OpenID Connect provider supports use of the claims parameter, with true indicating support.
	ClaimsParameterSupported *bool `json:"claims_parameter_supported,omitempty"`
	// boolean value specifying whether the OpenID Connect provider supports use of the request parameter, with true indicating support.
	RequestParameterSupported *bool `json:"request_parameter_supported,omitempty"`
	// boolean value specifying whether the OpenID Connect provider supports use of the request_uri parameter, with true indicating support.
	RequestUriParameterSupported *bool `json:"request_uri_parameter_supported,omitempty"`
	// URL at the OpenID Connect provider to which a relying party can perform a redirect to request that the end-user be logged out at the OpenID Connect provider.
	EndSessionEndpoint *string `json:"end_session_endpoint,omitempty"`
	// PingFederate session revocation endpoint. (Not applicable if PingFederate is not the OpenID Connect provider)
	PingRevokedSrisEndpoint *string `json:"ping_revoked_sris_endpoint,omitempty"`
	// PingFederate logout endpoint. (Not applicable if PingFederate is not the OpenID Connect provider)
	PingEndSessionEndpoint *string `json:"ping_end_session_endpoint,omitempty"`
	// JSON array containing a list of the OAuth 2.0 grant type values that this OpenID Connect provider supports.
	GrantTypesSupported []string `json:"grant_types_supported,omitempty"`
	// JSON array containing a list of the JWS signing algorithms supported by the userInfo endpoint to encode the claims in a JWT.
	UserinfoSigningAlgValuesSupported []string `json:"userinfo_signing_alg_values_supported,omitempty"`
	// JSON array containing a list of the JWS signing algorithms supported by the OpenID Connect provider for request objects.
	RequestObjectSigningAlgValuesSupported []string `json:"request_object_signing_alg_values_supported,omitempty"`
	// the endpoint used to initiate an out-of-band authentication.
	BackchannelAuthenticationEndpoint *string `json:"backchannel_authentication_endpoint,omitempty"`
	// a map of alternative authorization server endpoints. The key is an authorization server endpoint, and the value is a preferred URL for the endpoint.  Key type: String Value type: String
	MtlsEndpointAliases                *map[string]string `json:"mtls_endpoint_aliases,omitempty"`
	PushedAuthorizationRequestEndpoint *string            `json:"pushed_authorization_request_endpoint,omitempty"`
}

// NewOIDCProviderMetadata instantiates a new OIDCProviderMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOIDCProviderMetadata() *OIDCProviderMetadata {
	this := OIDCProviderMetadata{}
	return &this
}

// NewOIDCProviderMetadataWithDefaults instantiates a new OIDCProviderMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCProviderMetadataWithDefaults() *OIDCProviderMetadata {
	this := OIDCProviderMetadata{}
	return &this
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *OIDCProviderMetadata) SetIssuer(v string) {
	o.Issuer = &v
}

// GetAuthorizationEndpoint returns the AuthorizationEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetAuthorizationEndpoint() string {
	if o == nil || IsNil(o.AuthorizationEndpoint) {
		var ret string
		return ret
	}
	return *o.AuthorizationEndpoint
}

// GetAuthorizationEndpointOk returns a tuple with the AuthorizationEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetAuthorizationEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationEndpoint) {
		return nil, false
	}
	return o.AuthorizationEndpoint, true
}

// HasAuthorizationEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasAuthorizationEndpoint() bool {
	if o != nil && !IsNil(o.AuthorizationEndpoint) {
		return true
	}

	return false
}

// SetAuthorizationEndpoint gets a reference to the given string and assigns it to the AuthorizationEndpoint field.
func (o *OIDCProviderMetadata) SetAuthorizationEndpoint(v string) {
	o.AuthorizationEndpoint = &v
}

// GetTokenEndpoint returns the TokenEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetTokenEndpoint() string {
	if o == nil || IsNil(o.TokenEndpoint) {
		var ret string
		return ret
	}
	return *o.TokenEndpoint
}

// GetTokenEndpointOk returns a tuple with the TokenEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetTokenEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.TokenEndpoint) {
		return nil, false
	}
	return o.TokenEndpoint, true
}

// HasTokenEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasTokenEndpoint() bool {
	if o != nil && !IsNil(o.TokenEndpoint) {
		return true
	}

	return false
}

// SetTokenEndpoint gets a reference to the given string and assigns it to the TokenEndpoint field.
func (o *OIDCProviderMetadata) SetTokenEndpoint(v string) {
	o.TokenEndpoint = &v
}

// GetRevocationEndpoint returns the RevocationEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetRevocationEndpoint() string {
	if o == nil || IsNil(o.RevocationEndpoint) {
		var ret string
		return ret
	}
	return *o.RevocationEndpoint
}

// GetRevocationEndpointOk returns a tuple with the RevocationEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetRevocationEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.RevocationEndpoint) {
		return nil, false
	}
	return o.RevocationEndpoint, true
}

// HasRevocationEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasRevocationEndpoint() bool {
	if o != nil && !IsNil(o.RevocationEndpoint) {
		return true
	}

	return false
}

// SetRevocationEndpoint gets a reference to the given string and assigns it to the RevocationEndpoint field.
func (o *OIDCProviderMetadata) SetRevocationEndpoint(v string) {
	o.RevocationEndpoint = &v
}

// GetUserinfoEndpoint returns the UserinfoEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetUserinfoEndpoint() string {
	if o == nil || IsNil(o.UserinfoEndpoint) {
		var ret string
		return ret
	}
	return *o.UserinfoEndpoint
}

// GetUserinfoEndpointOk returns a tuple with the UserinfoEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetUserinfoEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.UserinfoEndpoint) {
		return nil, false
	}
	return o.UserinfoEndpoint, true
}

// HasUserinfoEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasUserinfoEndpoint() bool {
	if o != nil && !IsNil(o.UserinfoEndpoint) {
		return true
	}

	return false
}

// SetUserinfoEndpoint gets a reference to the given string and assigns it to the UserinfoEndpoint field.
func (o *OIDCProviderMetadata) SetUserinfoEndpoint(v string) {
	o.UserinfoEndpoint = &v
}

// GetIntrospectionEndpoint returns the IntrospectionEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetIntrospectionEndpoint() string {
	if o == nil || IsNil(o.IntrospectionEndpoint) {
		var ret string
		return ret
	}
	return *o.IntrospectionEndpoint
}

// GetIntrospectionEndpointOk returns a tuple with the IntrospectionEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetIntrospectionEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.IntrospectionEndpoint) {
		return nil, false
	}
	return o.IntrospectionEndpoint, true
}

// HasIntrospectionEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasIntrospectionEndpoint() bool {
	if o != nil && !IsNil(o.IntrospectionEndpoint) {
		return true
	}

	return false
}

// SetIntrospectionEndpoint gets a reference to the given string and assigns it to the IntrospectionEndpoint field.
func (o *OIDCProviderMetadata) SetIntrospectionEndpoint(v string) {
	o.IntrospectionEndpoint = &v
}

// GetJwksUri returns the JwksUri field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetJwksUri() string {
	if o == nil || IsNil(o.JwksUri) {
		var ret string
		return ret
	}
	return *o.JwksUri
}

// GetJwksUriOk returns a tuple with the JwksUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetJwksUriOk() (*string, bool) {
	if o == nil || IsNil(o.JwksUri) {
		return nil, false
	}
	return o.JwksUri, true
}

// HasJwksUri returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasJwksUri() bool {
	if o != nil && !IsNil(o.JwksUri) {
		return true
	}

	return false
}

// SetJwksUri gets a reference to the given string and assigns it to the JwksUri field.
func (o *OIDCProviderMetadata) SetJwksUri(v string) {
	o.JwksUri = &v
}

// GetScopesSupported returns the ScopesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetScopesSupported() []string {
	if o == nil || IsNil(o.ScopesSupported) {
		var ret []string
		return ret
	}
	return o.ScopesSupported
}

// GetScopesSupportedOk returns a tuple with the ScopesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetScopesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.ScopesSupported) {
		return nil, false
	}
	return o.ScopesSupported, true
}

// HasScopesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasScopesSupported() bool {
	if o != nil && !IsNil(o.ScopesSupported) {
		return true
	}

	return false
}

// SetScopesSupported gets a reference to the given []string and assigns it to the ScopesSupported field.
func (o *OIDCProviderMetadata) SetScopesSupported(v []string) {
	o.ScopesSupported = v
}

// GetClaimsSupported returns the ClaimsSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetClaimsSupported() []string {
	if o == nil || IsNil(o.ClaimsSupported) {
		var ret []string
		return ret
	}
	return o.ClaimsSupported
}

// GetClaimsSupportedOk returns a tuple with the ClaimsSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetClaimsSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.ClaimsSupported) {
		return nil, false
	}
	return o.ClaimsSupported, true
}

// HasClaimsSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasClaimsSupported() bool {
	if o != nil && !IsNil(o.ClaimsSupported) {
		return true
	}

	return false
}

// SetClaimsSupported gets a reference to the given []string and assigns it to the ClaimsSupported field.
func (o *OIDCProviderMetadata) SetClaimsSupported(v []string) {
	o.ClaimsSupported = v
}

// GetResponseTypesSupported returns the ResponseTypesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetResponseTypesSupported() []string {
	if o == nil || IsNil(o.ResponseTypesSupported) {
		var ret []string
		return ret
	}
	return o.ResponseTypesSupported
}

// GetResponseTypesSupportedOk returns a tuple with the ResponseTypesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetResponseTypesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.ResponseTypesSupported) {
		return nil, false
	}
	return o.ResponseTypesSupported, true
}

// HasResponseTypesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasResponseTypesSupported() bool {
	if o != nil && !IsNil(o.ResponseTypesSupported) {
		return true
	}

	return false
}

// SetResponseTypesSupported gets a reference to the given []string and assigns it to the ResponseTypesSupported field.
func (o *OIDCProviderMetadata) SetResponseTypesSupported(v []string) {
	o.ResponseTypesSupported = v
}

// GetResponseModesSupported returns the ResponseModesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetResponseModesSupported() []string {
	if o == nil || IsNil(o.ResponseModesSupported) {
		var ret []string
		return ret
	}
	return o.ResponseModesSupported
}

// GetResponseModesSupportedOk returns a tuple with the ResponseModesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetResponseModesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.ResponseModesSupported) {
		return nil, false
	}
	return o.ResponseModesSupported, true
}

// HasResponseModesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasResponseModesSupported() bool {
	if o != nil && !IsNil(o.ResponseModesSupported) {
		return true
	}

	return false
}

// SetResponseModesSupported gets a reference to the given []string and assigns it to the ResponseModesSupported field.
func (o *OIDCProviderMetadata) SetResponseModesSupported(v []string) {
	o.ResponseModesSupported = v
}

// GetSubjectTypesSupported returns the SubjectTypesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetSubjectTypesSupported() []string {
	if o == nil || IsNil(o.SubjectTypesSupported) {
		var ret []string
		return ret
	}
	return o.SubjectTypesSupported
}

// GetSubjectTypesSupportedOk returns a tuple with the SubjectTypesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetSubjectTypesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.SubjectTypesSupported) {
		return nil, false
	}
	return o.SubjectTypesSupported, true
}

// HasSubjectTypesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasSubjectTypesSupported() bool {
	if o != nil && !IsNil(o.SubjectTypesSupported) {
		return true
	}

	return false
}

// SetSubjectTypesSupported gets a reference to the given []string and assigns it to the SubjectTypesSupported field.
func (o *OIDCProviderMetadata) SetSubjectTypesSupported(v []string) {
	o.SubjectTypesSupported = v
}

// GetIdTokenSigningAlgValuesSupported returns the IdTokenSigningAlgValuesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetIdTokenSigningAlgValuesSupported() []string {
	if o == nil || IsNil(o.IdTokenSigningAlgValuesSupported) {
		var ret []string
		return ret
	}
	return o.IdTokenSigningAlgValuesSupported
}

// GetIdTokenSigningAlgValuesSupportedOk returns a tuple with the IdTokenSigningAlgValuesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetIdTokenSigningAlgValuesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.IdTokenSigningAlgValuesSupported) {
		return nil, false
	}
	return o.IdTokenSigningAlgValuesSupported, true
}

// HasIdTokenSigningAlgValuesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasIdTokenSigningAlgValuesSupported() bool {
	if o != nil && !IsNil(o.IdTokenSigningAlgValuesSupported) {
		return true
	}

	return false
}

// SetIdTokenSigningAlgValuesSupported gets a reference to the given []string and assigns it to the IdTokenSigningAlgValuesSupported field.
func (o *OIDCProviderMetadata) SetIdTokenSigningAlgValuesSupported(v []string) {
	o.IdTokenSigningAlgValuesSupported = v
}

// GetTokenEndpointAuthMethodsSupported returns the TokenEndpointAuthMethodsSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetTokenEndpointAuthMethodsSupported() []string {
	if o == nil || IsNil(o.TokenEndpointAuthMethodsSupported) {
		var ret []string
		return ret
	}
	return o.TokenEndpointAuthMethodsSupported
}

// GetTokenEndpointAuthMethodsSupportedOk returns a tuple with the TokenEndpointAuthMethodsSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetTokenEndpointAuthMethodsSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.TokenEndpointAuthMethodsSupported) {
		return nil, false
	}
	return o.TokenEndpointAuthMethodsSupported, true
}

// HasTokenEndpointAuthMethodsSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasTokenEndpointAuthMethodsSupported() bool {
	if o != nil && !IsNil(o.TokenEndpointAuthMethodsSupported) {
		return true
	}

	return false
}

// SetTokenEndpointAuthMethodsSupported gets a reference to the given []string and assigns it to the TokenEndpointAuthMethodsSupported field.
func (o *OIDCProviderMetadata) SetTokenEndpointAuthMethodsSupported(v []string) {
	o.TokenEndpointAuthMethodsSupported = v
}

// GetTokenEndpointAuthSigningAlgValuesSupported returns the TokenEndpointAuthSigningAlgValuesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetTokenEndpointAuthSigningAlgValuesSupported() []string {
	if o == nil || IsNil(o.TokenEndpointAuthSigningAlgValuesSupported) {
		var ret []string
		return ret
	}
	return o.TokenEndpointAuthSigningAlgValuesSupported
}

// GetTokenEndpointAuthSigningAlgValuesSupportedOk returns a tuple with the TokenEndpointAuthSigningAlgValuesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetTokenEndpointAuthSigningAlgValuesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.TokenEndpointAuthSigningAlgValuesSupported) {
		return nil, false
	}
	return o.TokenEndpointAuthSigningAlgValuesSupported, true
}

// HasTokenEndpointAuthSigningAlgValuesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasTokenEndpointAuthSigningAlgValuesSupported() bool {
	if o != nil && !IsNil(o.TokenEndpointAuthSigningAlgValuesSupported) {
		return true
	}

	return false
}

// SetTokenEndpointAuthSigningAlgValuesSupported gets a reference to the given []string and assigns it to the TokenEndpointAuthSigningAlgValuesSupported field.
func (o *OIDCProviderMetadata) SetTokenEndpointAuthSigningAlgValuesSupported(v []string) {
	o.TokenEndpointAuthSigningAlgValuesSupported = v
}

// GetClaimTypesSupported returns the ClaimTypesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetClaimTypesSupported() []string {
	if o == nil || IsNil(o.ClaimTypesSupported) {
		var ret []string
		return ret
	}
	return o.ClaimTypesSupported
}

// GetClaimTypesSupportedOk returns a tuple with the ClaimTypesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetClaimTypesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.ClaimTypesSupported) {
		return nil, false
	}
	return o.ClaimTypesSupported, true
}

// HasClaimTypesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasClaimTypesSupported() bool {
	if o != nil && !IsNil(o.ClaimTypesSupported) {
		return true
	}

	return false
}

// SetClaimTypesSupported gets a reference to the given []string and assigns it to the ClaimTypesSupported field.
func (o *OIDCProviderMetadata) SetClaimTypesSupported(v []string) {
	o.ClaimTypesSupported = v
}

// GetCodeChallengeMethodsSupported returns the CodeChallengeMethodsSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetCodeChallengeMethodsSupported() []string {
	if o == nil || IsNil(o.CodeChallengeMethodsSupported) {
		var ret []string
		return ret
	}
	return o.CodeChallengeMethodsSupported
}

// GetCodeChallengeMethodsSupportedOk returns a tuple with the CodeChallengeMethodsSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetCodeChallengeMethodsSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.CodeChallengeMethodsSupported) {
		return nil, false
	}
	return o.CodeChallengeMethodsSupported, true
}

// HasCodeChallengeMethodsSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasCodeChallengeMethodsSupported() bool {
	if o != nil && !IsNil(o.CodeChallengeMethodsSupported) {
		return true
	}

	return false
}

// SetCodeChallengeMethodsSupported gets a reference to the given []string and assigns it to the CodeChallengeMethodsSupported field.
func (o *OIDCProviderMetadata) SetCodeChallengeMethodsSupported(v []string) {
	o.CodeChallengeMethodsSupported = v
}

// GetClaimsParameterSupported returns the ClaimsParameterSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetClaimsParameterSupported() bool {
	if o == nil || IsNil(o.ClaimsParameterSupported) {
		var ret bool
		return ret
	}
	return *o.ClaimsParameterSupported
}

// GetClaimsParameterSupportedOk returns a tuple with the ClaimsParameterSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetClaimsParameterSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.ClaimsParameterSupported) {
		return nil, false
	}
	return o.ClaimsParameterSupported, true
}

// HasClaimsParameterSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasClaimsParameterSupported() bool {
	if o != nil && !IsNil(o.ClaimsParameterSupported) {
		return true
	}

	return false
}

// SetClaimsParameterSupported gets a reference to the given bool and assigns it to the ClaimsParameterSupported field.
func (o *OIDCProviderMetadata) SetClaimsParameterSupported(v bool) {
	o.ClaimsParameterSupported = &v
}

// GetRequestParameterSupported returns the RequestParameterSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetRequestParameterSupported() bool {
	if o == nil || IsNil(o.RequestParameterSupported) {
		var ret bool
		return ret
	}
	return *o.RequestParameterSupported
}

// GetRequestParameterSupportedOk returns a tuple with the RequestParameterSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetRequestParameterSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.RequestParameterSupported) {
		return nil, false
	}
	return o.RequestParameterSupported, true
}

// HasRequestParameterSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasRequestParameterSupported() bool {
	if o != nil && !IsNil(o.RequestParameterSupported) {
		return true
	}

	return false
}

// SetRequestParameterSupported gets a reference to the given bool and assigns it to the RequestParameterSupported field.
func (o *OIDCProviderMetadata) SetRequestParameterSupported(v bool) {
	o.RequestParameterSupported = &v
}

// GetRequestUriParameterSupported returns the RequestUriParameterSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetRequestUriParameterSupported() bool {
	if o == nil || IsNil(o.RequestUriParameterSupported) {
		var ret bool
		return ret
	}
	return *o.RequestUriParameterSupported
}

// GetRequestUriParameterSupportedOk returns a tuple with the RequestUriParameterSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetRequestUriParameterSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.RequestUriParameterSupported) {
		return nil, false
	}
	return o.RequestUriParameterSupported, true
}

// HasRequestUriParameterSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasRequestUriParameterSupported() bool {
	if o != nil && !IsNil(o.RequestUriParameterSupported) {
		return true
	}

	return false
}

// SetRequestUriParameterSupported gets a reference to the given bool and assigns it to the RequestUriParameterSupported field.
func (o *OIDCProviderMetadata) SetRequestUriParameterSupported(v bool) {
	o.RequestUriParameterSupported = &v
}

// GetEndSessionEndpoint returns the EndSessionEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetEndSessionEndpoint() string {
	if o == nil || IsNil(o.EndSessionEndpoint) {
		var ret string
		return ret
	}
	return *o.EndSessionEndpoint
}

// GetEndSessionEndpointOk returns a tuple with the EndSessionEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetEndSessionEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.EndSessionEndpoint) {
		return nil, false
	}
	return o.EndSessionEndpoint, true
}

// HasEndSessionEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasEndSessionEndpoint() bool {
	if o != nil && !IsNil(o.EndSessionEndpoint) {
		return true
	}

	return false
}

// SetEndSessionEndpoint gets a reference to the given string and assigns it to the EndSessionEndpoint field.
func (o *OIDCProviderMetadata) SetEndSessionEndpoint(v string) {
	o.EndSessionEndpoint = &v
}

// GetPingRevokedSrisEndpoint returns the PingRevokedSrisEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetPingRevokedSrisEndpoint() string {
	if o == nil || IsNil(o.PingRevokedSrisEndpoint) {
		var ret string
		return ret
	}
	return *o.PingRevokedSrisEndpoint
}

// GetPingRevokedSrisEndpointOk returns a tuple with the PingRevokedSrisEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetPingRevokedSrisEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.PingRevokedSrisEndpoint) {
		return nil, false
	}
	return o.PingRevokedSrisEndpoint, true
}

// HasPingRevokedSrisEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasPingRevokedSrisEndpoint() bool {
	if o != nil && !IsNil(o.PingRevokedSrisEndpoint) {
		return true
	}

	return false
}

// SetPingRevokedSrisEndpoint gets a reference to the given string and assigns it to the PingRevokedSrisEndpoint field.
func (o *OIDCProviderMetadata) SetPingRevokedSrisEndpoint(v string) {
	o.PingRevokedSrisEndpoint = &v
}

// GetPingEndSessionEndpoint returns the PingEndSessionEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetPingEndSessionEndpoint() string {
	if o == nil || IsNil(o.PingEndSessionEndpoint) {
		var ret string
		return ret
	}
	return *o.PingEndSessionEndpoint
}

// GetPingEndSessionEndpointOk returns a tuple with the PingEndSessionEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetPingEndSessionEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.PingEndSessionEndpoint) {
		return nil, false
	}
	return o.PingEndSessionEndpoint, true
}

// HasPingEndSessionEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasPingEndSessionEndpoint() bool {
	if o != nil && !IsNil(o.PingEndSessionEndpoint) {
		return true
	}

	return false
}

// SetPingEndSessionEndpoint gets a reference to the given string and assigns it to the PingEndSessionEndpoint field.
func (o *OIDCProviderMetadata) SetPingEndSessionEndpoint(v string) {
	o.PingEndSessionEndpoint = &v
}

// GetGrantTypesSupported returns the GrantTypesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetGrantTypesSupported() []string {
	if o == nil || IsNil(o.GrantTypesSupported) {
		var ret []string
		return ret
	}
	return o.GrantTypesSupported
}

// GetGrantTypesSupportedOk returns a tuple with the GrantTypesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetGrantTypesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantTypesSupported) {
		return nil, false
	}
	return o.GrantTypesSupported, true
}

// HasGrantTypesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasGrantTypesSupported() bool {
	if o != nil && !IsNil(o.GrantTypesSupported) {
		return true
	}

	return false
}

// SetGrantTypesSupported gets a reference to the given []string and assigns it to the GrantTypesSupported field.
func (o *OIDCProviderMetadata) SetGrantTypesSupported(v []string) {
	o.GrantTypesSupported = v
}

// GetUserinfoSigningAlgValuesSupported returns the UserinfoSigningAlgValuesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetUserinfoSigningAlgValuesSupported() []string {
	if o == nil || IsNil(o.UserinfoSigningAlgValuesSupported) {
		var ret []string
		return ret
	}
	return o.UserinfoSigningAlgValuesSupported
}

// GetUserinfoSigningAlgValuesSupportedOk returns a tuple with the UserinfoSigningAlgValuesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetUserinfoSigningAlgValuesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.UserinfoSigningAlgValuesSupported) {
		return nil, false
	}
	return o.UserinfoSigningAlgValuesSupported, true
}

// HasUserinfoSigningAlgValuesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasUserinfoSigningAlgValuesSupported() bool {
	if o != nil && !IsNil(o.UserinfoSigningAlgValuesSupported) {
		return true
	}

	return false
}

// SetUserinfoSigningAlgValuesSupported gets a reference to the given []string and assigns it to the UserinfoSigningAlgValuesSupported field.
func (o *OIDCProviderMetadata) SetUserinfoSigningAlgValuesSupported(v []string) {
	o.UserinfoSigningAlgValuesSupported = v
}

// GetRequestObjectSigningAlgValuesSupported returns the RequestObjectSigningAlgValuesSupported field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetRequestObjectSigningAlgValuesSupported() []string {
	if o == nil || IsNil(o.RequestObjectSigningAlgValuesSupported) {
		var ret []string
		return ret
	}
	return o.RequestObjectSigningAlgValuesSupported
}

// GetRequestObjectSigningAlgValuesSupportedOk returns a tuple with the RequestObjectSigningAlgValuesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetRequestObjectSigningAlgValuesSupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.RequestObjectSigningAlgValuesSupported) {
		return nil, false
	}
	return o.RequestObjectSigningAlgValuesSupported, true
}

// HasRequestObjectSigningAlgValuesSupported returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasRequestObjectSigningAlgValuesSupported() bool {
	if o != nil && !IsNil(o.RequestObjectSigningAlgValuesSupported) {
		return true
	}

	return false
}

// SetRequestObjectSigningAlgValuesSupported gets a reference to the given []string and assigns it to the RequestObjectSigningAlgValuesSupported field.
func (o *OIDCProviderMetadata) SetRequestObjectSigningAlgValuesSupported(v []string) {
	o.RequestObjectSigningAlgValuesSupported = v
}

// GetBackchannelAuthenticationEndpoint returns the BackchannelAuthenticationEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetBackchannelAuthenticationEndpoint() string {
	if o == nil || IsNil(o.BackchannelAuthenticationEndpoint) {
		var ret string
		return ret
	}
	return *o.BackchannelAuthenticationEndpoint
}

// GetBackchannelAuthenticationEndpointOk returns a tuple with the BackchannelAuthenticationEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetBackchannelAuthenticationEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.BackchannelAuthenticationEndpoint) {
		return nil, false
	}
	return o.BackchannelAuthenticationEndpoint, true
}

// HasBackchannelAuthenticationEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasBackchannelAuthenticationEndpoint() bool {
	if o != nil && !IsNil(o.BackchannelAuthenticationEndpoint) {
		return true
	}

	return false
}

// SetBackchannelAuthenticationEndpoint gets a reference to the given string and assigns it to the BackchannelAuthenticationEndpoint field.
func (o *OIDCProviderMetadata) SetBackchannelAuthenticationEndpoint(v string) {
	o.BackchannelAuthenticationEndpoint = &v
}

// GetMtlsEndpointAliases returns the MtlsEndpointAliases field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetMtlsEndpointAliases() map[string]string {
	if o == nil || IsNil(o.MtlsEndpointAliases) {
		var ret map[string]string
		return ret
	}
	return *o.MtlsEndpointAliases
}

// GetMtlsEndpointAliasesOk returns a tuple with the MtlsEndpointAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetMtlsEndpointAliasesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.MtlsEndpointAliases) {
		return nil, false
	}
	return o.MtlsEndpointAliases, true
}

// HasMtlsEndpointAliases returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasMtlsEndpointAliases() bool {
	if o != nil && !IsNil(o.MtlsEndpointAliases) {
		return true
	}

	return false
}

// SetMtlsEndpointAliases gets a reference to the given map[string]string and assigns it to the MtlsEndpointAliases field.
func (o *OIDCProviderMetadata) SetMtlsEndpointAliases(v map[string]string) {
	o.MtlsEndpointAliases = &v
}

// GetPushedAuthorizationRequestEndpoint returns the PushedAuthorizationRequestEndpoint field value if set, zero value otherwise.
func (o *OIDCProviderMetadata) GetPushedAuthorizationRequestEndpoint() string {
	if o == nil || IsNil(o.PushedAuthorizationRequestEndpoint) {
		var ret string
		return ret
	}
	return *o.PushedAuthorizationRequestEndpoint
}

// GetPushedAuthorizationRequestEndpointOk returns a tuple with the PushedAuthorizationRequestEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProviderMetadata) GetPushedAuthorizationRequestEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.PushedAuthorizationRequestEndpoint) {
		return nil, false
	}
	return o.PushedAuthorizationRequestEndpoint, true
}

// HasPushedAuthorizationRequestEndpoint returns a boolean if a field has been set.
func (o *OIDCProviderMetadata) HasPushedAuthorizationRequestEndpoint() bool {
	if o != nil && !IsNil(o.PushedAuthorizationRequestEndpoint) {
		return true
	}

	return false
}

// SetPushedAuthorizationRequestEndpoint gets a reference to the given string and assigns it to the PushedAuthorizationRequestEndpoint field.
func (o *OIDCProviderMetadata) SetPushedAuthorizationRequestEndpoint(v string) {
	o.PushedAuthorizationRequestEndpoint = &v
}

func (o OIDCProviderMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OIDCProviderMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.AuthorizationEndpoint) {
		toSerialize["authorization_endpoint"] = o.AuthorizationEndpoint
	}
	if !IsNil(o.TokenEndpoint) {
		toSerialize["token_endpoint"] = o.TokenEndpoint
	}
	if !IsNil(o.RevocationEndpoint) {
		toSerialize["revocation_endpoint"] = o.RevocationEndpoint
	}
	if !IsNil(o.UserinfoEndpoint) {
		toSerialize["userinfo_endpoint"] = o.UserinfoEndpoint
	}
	if !IsNil(o.IntrospectionEndpoint) {
		toSerialize["introspection_endpoint"] = o.IntrospectionEndpoint
	}
	if !IsNil(o.JwksUri) {
		toSerialize["jwks_uri"] = o.JwksUri
	}
	if !IsNil(o.ScopesSupported) {
		toSerialize["scopes_supported"] = o.ScopesSupported
	}
	if !IsNil(o.ClaimsSupported) {
		toSerialize["claims_supported"] = o.ClaimsSupported
	}
	if !IsNil(o.ResponseTypesSupported) {
		toSerialize["response_types_supported"] = o.ResponseTypesSupported
	}
	if !IsNil(o.ResponseModesSupported) {
		toSerialize["response_modes_supported"] = o.ResponseModesSupported
	}
	if !IsNil(o.SubjectTypesSupported) {
		toSerialize["subject_types_supported"] = o.SubjectTypesSupported
	}
	if !IsNil(o.IdTokenSigningAlgValuesSupported) {
		toSerialize["id_token_signing_alg_values_supported"] = o.IdTokenSigningAlgValuesSupported
	}
	if !IsNil(o.TokenEndpointAuthMethodsSupported) {
		toSerialize["token_endpoint_auth_methods_supported"] = o.TokenEndpointAuthMethodsSupported
	}
	if !IsNil(o.TokenEndpointAuthSigningAlgValuesSupported) {
		toSerialize["token_endpoint_auth_signing_alg_values_supported"] = o.TokenEndpointAuthSigningAlgValuesSupported
	}
	if !IsNil(o.ClaimTypesSupported) {
		toSerialize["claim_types_supported"] = o.ClaimTypesSupported
	}
	if !IsNil(o.CodeChallengeMethodsSupported) {
		toSerialize["code_challenge_methods_supported"] = o.CodeChallengeMethodsSupported
	}
	if !IsNil(o.ClaimsParameterSupported) {
		toSerialize["claims_parameter_supported"] = o.ClaimsParameterSupported
	}
	if !IsNil(o.RequestParameterSupported) {
		toSerialize["request_parameter_supported"] = o.RequestParameterSupported
	}
	if !IsNil(o.RequestUriParameterSupported) {
		toSerialize["request_uri_parameter_supported"] = o.RequestUriParameterSupported
	}
	if !IsNil(o.EndSessionEndpoint) {
		toSerialize["end_session_endpoint"] = o.EndSessionEndpoint
	}
	if !IsNil(o.PingRevokedSrisEndpoint) {
		toSerialize["ping_revoked_sris_endpoint"] = o.PingRevokedSrisEndpoint
	}
	if !IsNil(o.PingEndSessionEndpoint) {
		toSerialize["ping_end_session_endpoint"] = o.PingEndSessionEndpoint
	}
	if !IsNil(o.GrantTypesSupported) {
		toSerialize["grant_types_supported"] = o.GrantTypesSupported
	}
	if !IsNil(o.UserinfoSigningAlgValuesSupported) {
		toSerialize["userinfo_signing_alg_values_supported"] = o.UserinfoSigningAlgValuesSupported
	}
	if !IsNil(o.RequestObjectSigningAlgValuesSupported) {
		toSerialize["request_object_signing_alg_values_supported"] = o.RequestObjectSigningAlgValuesSupported
	}
	if !IsNil(o.BackchannelAuthenticationEndpoint) {
		toSerialize["backchannel_authentication_endpoint"] = o.BackchannelAuthenticationEndpoint
	}
	if !IsNil(o.MtlsEndpointAliases) {
		toSerialize["mtls_endpoint_aliases"] = o.MtlsEndpointAliases
	}
	if !IsNil(o.PushedAuthorizationRequestEndpoint) {
		toSerialize["pushed_authorization_request_endpoint"] = o.PushedAuthorizationRequestEndpoint
	}
	return toSerialize, nil
}

type NullableOIDCProviderMetadata struct {
	value *OIDCProviderMetadata
	isSet bool
}

func (v NullableOIDCProviderMetadata) Get() *OIDCProviderMetadata {
	return v.value
}

func (v *NullableOIDCProviderMetadata) Set(val *OIDCProviderMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableOIDCProviderMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableOIDCProviderMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOIDCProviderMetadata(val *OIDCProviderMetadata) *NullableOIDCProviderMetadata {
	return &NullableOIDCProviderMetadata{value: val, isSet: true}
}

func (v NullableOIDCProviderMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOIDCProviderMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
