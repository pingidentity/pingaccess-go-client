/*
PingAccess Administrative API

The PingAccess Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingAccess.

API version: 7.1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ExportParameters The export parameters for a key pair. In the exported PEM file, the private key is protected with PBES2 encryption and AES.
type ExportParameters struct {
	Password HiddenField `json:"password"`
}

// NewExportParameters instantiates a new ExportParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportParameters(password HiddenField) *ExportParameters {
	this := ExportParameters{}
	this.Password = password
	return &this
}

// NewExportParametersWithDefaults instantiates a new ExportParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportParametersWithDefaults() *ExportParameters {
	this := ExportParameters{}
	return &this
}

// GetPassword returns the Password field value
func (o *ExportParameters) GetPassword() HiddenField {
	if o == nil {
		var ret HiddenField
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ExportParameters) GetPasswordOk() (*HiddenField, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ExportParameters) SetPassword(v HiddenField) {
	o.Password = v
}

func (o ExportParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableExportParameters struct {
	value *ExportParameters
	isSet bool
}

func (v NullableExportParameters) Get() *ExportParameters {
	return v.value
}

func (v *NullableExportParameters) Set(val *ExportParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableExportParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableExportParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportParameters(val *ExportParameters) *NullableExportParameters {
	return &NullableExportParameters{value: val, isSet: true}
}

func (v NullableExportParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


